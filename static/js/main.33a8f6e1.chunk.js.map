{"version":3,"sources":["components/Bulb.jsx","state.js","components/Text.jsx","components/AboutMenuItem.jsx","components/Layout.jsx","components/ScrollArea.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Bulb","props","castShadow","color","args","state","top","Text","children","vAlign","hAlign","size","font","THREE","data","config","useMemo","height","curveSegments","bevelThickness","mesh","useUpdate","self","geometry","computeBoundingBox","boundingBox","getSize","position","x","y","scale","ref","receiveShadow","clearcoat","AboutMenuItem","useRef","sphereRef","useFrame","clock","current","rotation","Math","sin","getElapsedTime","hover","lerp","z","centerAnchor","align","p","onPointerEnter","e","onPointerLeave","side","transparent","transmission","reflectivity","Layout","groupRef","vec","three","window","set","useThree","useAspect","width","vpWidth","vpHeight","ScrollArea","pages","style","left","overflow","onScroll","target","scrollTop","Header","dir","justify","App","concurrent","camera","colorManagement","shadowMap","intensity","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33a8f6e1.chunk.js","sourcesContent":["const Bulb = props => {\n    return (\n        <mesh {...props}>\n            <pointLight castShadow />\n            <meshStandardMaterial color='yellow'/>\n            <sphereBufferGeometry args={[0.2,100,100]}/>\n        </mesh>\n    )\n}\n\nexport default Bulb","const state = {\n    top: 0\n}\n\nexport default state;","import * as THREE from \"three\"\nimport React, { useMemo } from \"react\"\nimport { useUpdate } from \"react-three-fiber\"\nimport * as data from 'three/examples/fonts/helvetiker_bold.typeface.json'\n\nconst Text = ({\n    children,\n    vAlign = \"center\",\n    hAlign = \"center\",\n    size = 1,\n    color = \"#000000\",\n    ...props\n}) => {\n    const font = new THREE.Font(data.default)\n    const config = useMemo(\n        () => ({\n            font,\n            size: 16,\n            height: 1,\n            curveSegments: 32,\n            // bevelEnabled: true,\n            bevelThickness: 3,\n            // bevelSize: 1,\n            // bevelOffset: 0,\n            // bevelSegments: 8,\n        }),\n        [font]\n    )\n    const mesh = useUpdate(\n        (self) => {\n            const size = new THREE.Vector3()\n            self.geometry.computeBoundingBox()\n            self.geometry.boundingBox.getSize(size)\n            self.position.x = hAlign === \"center\" ? -size.x / 2 : hAlign === \"right\" ? 0 : -size.x\n            self.position.y = vAlign === \"center\" ? -size.y / 2 : vAlign === \"top\" ? 0 : -size.y\n        },\n        [children],\n    )\n    return (\n        <group {...props} scale={[0.1 * size, 0.1 * size, 0.1]}>\n            <mesh ref={mesh} castShadow receiveShadow>\n                <textGeometry args={[children, config]} />\n                <meshPhysicalMaterial color={color} clearcoat={1}/>\n            </mesh>\n        </group>\n    )\n}\n\nexport default Text;","import { Box } from '@react-three/flex'\nimport { useFrame } from 'react-three-fiber'\nimport { useRef } from 'react'\nimport Text from './Text'\nimport * as THREE from 'three'\n\nconst AboutMenuItem = props => {\n    const ref = useRef()\n    const sphereRef = useRef()\n    useFrame(({ clock }) => {\n        sphereRef.current.rotation.y -= 0.05\n        ref.current.position.y += 0.05*Math.sin(2*clock.getElapsedTime())\n        \n        switch (ref.current.hover) {\n            case 1:\n                ref.current.position.lerp({ x: 0, y:-15, z:20 }, 0.02)\n            case 2:\n                ref.current.position.lerp({ x: 0, y:0, z:0 }, 0.02)\n                if (ref.current.position.y === 0) ref.current.hover = 0\n            default: \n                break\n        } \n    });\n\n    const handlePointerEnter = e => {\n        ref.current.hover = 1\n    }\n    const handlePointerLeave = e => {\n        ref.current.hover = 2\n    }\n\n    return (\n        <group ref={ref} >\n            <Box centerAnchor align='center' p={3}>\n                <group ref={sphereRef}>\n                    <mesh position={[0, -1, 0]} onPointerEnter={handlePointerEnter} onPointerLeave={handlePointerLeave}>\n                        <sphereBufferGeometry args={[6]} />\n                        <meshPhysicalMaterial side={THREE.DoubleSide} transparent transmission={0.9} clearcoat={1} reflectivity={1}/>\n                    </mesh>\n                    <Text color='red' size={1.5} position={[0,0,2]} >\n                        ?\n                    </Text>\n                    <Text color='red' size={1.5} position={[0,0,-2]} rotation={[0,3.14,0]}>\n                        ?\n                    </Text>\n                    <Text color='red' size={1.5} position={[0,0,2]} >\n                        ?\n                    </Text>\n                    <Text color='red' size={1.5} position={[2,0,0]} rotation={[0,1.57,0]}>\n                        ?\n                    </Text>\n                    <Text color='red' size={1.5} position={[-2,0,]} rotation={[0,-1.57,0]}>\n                        ?\n                    </Text>\n                    <mesh castShadow receiveShadow>\n                        <sphereBufferGeometry args={[2]}/>\n                        <meshPhysicalMaterial /> \n                    </mesh>\n                </group>\n                <Text position={[0,-3,0]}>\n                    About\n                </Text>\n            </Box>\n        </group>\n    )\n}\n\nexport default AboutMenuItem","import { Flex, Box } from '@react-three/flex';\nimport { useRef } from 'react';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport { useAspect } from '@react-three/drei'\nimport state from '../state';\nimport * as THREE from 'three';\nimport Text from './Text';\nimport AboutMenuItem from './AboutMenuItem'\n\nconst Layout = () => {\n    const groupRef = useRef()\n    const vec = new THREE.Vector3()\n\n    useFrame(three => {\n        window.state = three\n        groupRef.current.position.lerp(\n            vec.set(0, 0, state.top),\n            0.1\n        )\n    })\n\n    const { size } = useThree();\n    const [vpWidth, vpHeight] = useAspect(\"cover\", size.width, size.height)\n\n    return (\n        <group ref={groupRef}>\n            <Flex\n                align=\"center\"\n                position={[-(vpWidth-2)/2,vpHeight/2 - 5]}\n                size={[vpWidth-2,0,1]}\n            >\n                <AboutMenuItem /> \n            </Flex>\n            <mesh position={[0, 0, -2]} receiveShadow>\n                <planeBufferGeometry args={[vpWidth+5,vpHeight+5]} />\n                <meshPhysicalMaterial color='white' />\n            </mesh>\n        </group>\n    )\n}\n\nexport default Layout;","import state from '../state';\n\nconst ScrollArea = ({ pages = 1 }) => {\n    const handleScroll = (e) => {\n        state.top = e.target.scrollTop/16\n    }\n\n    return(\n        <div style={{\n            height: '100vh',\n            width: '100vw',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            overflow: 'auto'\n        }}\n            onScroll={handleScroll}\n        >\n            <div\n                style={{\n                    height: `${pages * 100}vh`,\n                }}\n            >\n            </div>\n        </div>\n    )\n}\n\nexport default ScrollArea;","import { useThree } from 'react-three-fiber';\nimport { useAspect } from '@react-three/drei';\nimport Text from './Text';\nimport { Box, Flex } from '@react-three/flex';\n\nconst Header = props => {\n    const { size } = useThree();\n    const [vpWidth] = useAspect(\"cover\", size.width, size.height)\n\n    return (\n        <Flex \n            size={[vpWidth-10]}\n            position={[-(vpWidth-10)/2,35,1]}\n            dir='row' \n            justify='space-between' \n            align='center'\n        >\n            <Box centerAnchor>\n                <Text>\n                    Hayden Linder\n                </Text>\n                <Text>\n                    Hayden Linder\n                </Text>\n            </Box>\n            <Box centerAnchor>\n                <Text>\n                    Menu\n                </Text>\n            </Box>\n        </Flex>\n    )\n}\n\nexport default Header","import { Canvas } from 'react-three-fiber';\nimport { Suspense } from 'react';\nimport Bulb from './components/Bulb';\nimport Layout from './components/Layout';\nimport ScrollArea from './components/ScrollArea';\nimport Header from './components/Header'\n\nfunction App() {\n  return (\n    <div \n      style={{ \n        height: '100vh', \n        width: '100vw',\n        overflow: 'hidden'\n      }}\n    >\n      <Canvas \n        concurrent\n        camera={ { position: [0,0,50] } }\n        colorManagement\n        shadowMap\n      >\n        <axesHelper args={[5]}/>\n        <ambientLight intensity={0.3}/>\n        <Bulb position={[0, 30, 40]}/>\n        <Suspense fallback={null}>\n          <Header />\n          <Layout />\n        </Suspense>\n      </Canvas> \n      <ScrollArea pages={3}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}