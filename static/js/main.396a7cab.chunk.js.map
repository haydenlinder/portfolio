{"version":3,"sources":["components/Bulb.jsx","state.js","components/Text.jsx","components/Model.jsx","components/AboutMenuItem.jsx","components/Menu.jsx","components/Layout.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Bulb","position","visible","castShadow","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","color","args","state","top","touchY","Text","children","vAlign","hAlign","size","props","config","useMemo","font","THREE","data","height","curveSegments","bevelThickness","mesh","useUpdate","self","geometry","computeBoundingBox","boundingBox","getSize","x","y","scale","ref","receiveShadow","clearcoat","enabled","Model","path","rotation","model","useLoader","GLTFLoader","process","key","nodes","object","scene","clone","AboutMenuItem","useThree","useRef","sphereRef","t","Math","random","PI","useFrame","clock","current","sin","getElapsedTime","hover","lerp","z","centerAnchor","align","mr","grow","onPointerEnter","e","onPointerLeave","side","transparent","transmission","reflectivity","roughness","fallback","Array","fill","Menu","width","justify","dir","wrap","Layout","groupRef","vec","useEffect","window","scrollTo","set","three","useAspect","vpWidth","vpHeight","min","Header","menuRef","onPointerDown","softShadows","App","handleScroll","delta","nativeEvent","deltaY","max","style","onWheel","onTouchStart","touches","item","pageY","onTouchMove","event","concurrent","camera","colorManagement","shadowMap","intensity","center","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.396a7cab.chunk.js","sourcesContent":["const Bulb = ({ position = [0,0,0], visible = false }) => {\n    return (\n        <mesh position={position}>\n            <pointLight castShadow \n                // shadow-mapSize-width={1024/4}\n                // shadow-mapSize-height={1024/4}\n                shadow-camera-far={75}\n                shadow-camera-left={-10}\n                shadow-camera-right={10}\n                shadow-camera-top={10}\n                shadow-camera-bottom={-10}\n            />\n            <meshStandardMaterial color='yellow' visible={visible}/>\n            <sphereBufferGeometry args={[0.2,100,100]}/>\n        </mesh>\n    )\n}\n\nexport default Bulb","const state = {\n    top: 0,\n    touchY: 0\n}\n\nexport default state;","import * as THREE from \"three\"\nimport React, { useMemo } from \"react\"\nimport { useUpdate } from \"react-three-fiber\"\nimport * as data from 'three/examples/fonts/helvetiker_bold.typeface.json'\n\nconst Text = ({\n    children,\n    vAlign = \"center\",\n    hAlign = \"center\",\n    size = 1,\n    color = \"#000000\",\n    ...props\n}) => {\n    const config = useMemo(() => {\n        const font = new THREE.Font(data.default)\n        return({\n            font,\n            size: 16,\n            height: 2,\n            curveSegments: 64,\n            // bevelEnabled: true,\n            bevelThickness: 3,\n            // bevelSize: 1,\n            // bevelOffset: 0,\n            // bevelSegments: 8,\n        })\n    }, [])\n    const mesh = useUpdate(\n        (self) => {\n            const size = new THREE.Vector3()\n            self.geometry.computeBoundingBox()\n            self.geometry.boundingBox.getSize(size)\n            self.position.x = hAlign === \"center\" ? -size.x / 2 : hAlign === \"right\" ? 0 : -size.x\n            self.position.y = vAlign === \"center\" ? -size.y / 2 : vAlign === \"top\" ? 0 : -size.y\n        },\n        [children],\n    )\n    return (\n        <group {...props} scale={[0.1 * size, 0.1 * size, 0.1]}>\n            <mesh ref={mesh} castShadow receiveShadow>\n                <textGeometry args={[children, config]} />\n                <meshPhysicalMaterial color={color} clearcoat={1}/>\n            </mesh>\n        </group>\n    )\n}\n\nexport default Text;","import { useLoader } from 'react-three-fiber';\nimport {\n    GLTFLoader\n} from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three'\n\nTHREE.Cache.enabled = true;\nconst Model = ({ \n    path,\n    scale = [1,1,1],\n    rotation = [0,0,0],\n    position = [0,0,0]\n}) => {\n    const model = useLoader(\n        GLTFLoader,\n        process.env.PUBLIC_URL + path\n    )\n\n    for (const key in model.nodes) {\n        const mesh = model.nodes[key]\n        if (mesh) mesh.castShadow = true\n    }\n    \n    return (\n        <primitive\n            object={model.scene.clone()}\n            scale={scale}\n            position={position}\n        />\n    )\n}\n\nexport default Model;","import { Box } from '@react-three/flex'\nimport { useFrame, useThree } from 'react-three-fiber'\nimport { Suspense, useRef } from 'react'\nimport Text from './Text'\nimport * as THREE from 'three'\nimport Model from './Model'\n\nconst AboutMenuItem = props => {\n    const { scene } = useThree()\n    const ref = useRef()\n    const sphereRef = useRef()\n    const t = Math.random()*Math.PI\n    useFrame(({ clock }) => {\n        sphereRef.current.rotation.y -= 0.05\n        ref.current.position.y += 0.04*Math.sin(2*clock.getElapsedTime() + t)\n        \n        switch (ref.current.hover) {\n            case 1:\n                ref.current.position.lerp({ x: 0, y:0, z:10 }, 0.02)\n            case 2:\n                ref.current.position.lerp({ x: 0, y:0, z:0 }, 0.02)\n                if (ref.current.position.y === 0) ref.current.hover = 0\n            default: \n                break\n        } \n    });\n\n    const handlePointerEnter = e => {\n        ref.current.hover = 1\n    }\n    const handlePointerLeave = e => {\n        ref.current.hover = 2\n    }\n\n    return (\n        <group ref={ref} >\n            <Box centerAnchor align='center' mr={1} grow={1}>\n                <group ref={sphereRef}>\n                    <mesh position={[0, -1, 0]} onPointerEnter={handlePointerEnter} onPointerLeave={handlePointerLeave}>\n                        <sphereBufferGeometry args={[6,100,100]} />\n                        <meshPhysicalMaterial side={THREE.DoubleSide} transparent transmission={0.9} clearcoat={1} reflectivity={1} roughness={0}/>\n                    </mesh>\n                    <Suspense fallback={null}>\n                        <Model\n                            path='/lowpoly_earth/scene.gltf'\n                            scale={new Array(3).fill(0.02)}\n                        />\n                    </Suspense>\n                </group>\n                <Text position={[0,-3,0]}>\n                    About\n                </Text>\n            </Box>\n        </group>\n    )\n}\n\nexport default AboutMenuItem","import { Flex, Box } from '@react-three/flex'\nimport AboutMenuItem from './AboutMenuItem'\n\nconst Menu = ({ width = 100, height = 50 }) => {\n    return(\n        <Flex\n            justify='center'\n            align='center'\n            position={[-width / 2, height/2, 3]}\n            size={[width, height, 0]}\n        >\n            <Box \n                width='auto'\n                height='auto'\n                dir='row'\n                wrap='wrap'\n                justify='space-around'\n            >\n                <AboutMenuItem />\n                <AboutMenuItem />\n                <AboutMenuItem />\n                <AboutMenuItem />\n            </Box>\n        </Flex>\n    )\n}\n\nexport default Menu","import { Flex, Box } from '@react-three/flex';\nimport { useRef, useEffect, Suspense } from 'react';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport { useAspect } from '@react-three/drei'\nimport state from '../state';\nimport * as THREE from 'three';\nimport Text from './Text';\nimport AboutMenuItem from './AboutMenuItem'\nimport Model from './Model';\nimport Menu from './Menu'\n\nconst Layout = () => {\n    const groupRef = useRef()\n    const vec = new THREE.Vector3()\n    useEffect(() => {\n        window.scrollTo(0, 1)\n        groupRef.current.position.lerp(vec.set(0,0,20),1)\n    })\n    useFrame(three => {\n        window.state = three\n        groupRef.current.position.lerp(\n            vec.set(0, 0, state.top),\n            0.1\n        )\n    })\n\n    const { size } = useThree();\n    const [vpWidth, vpHeight] = useAspect(\"cover\", size.width, size.height)\n    const width = Math.min(vpWidth - 10 , 80)\n\n    return (\n        <group ref={groupRef}>\n            <Menu width={width} height={vpHeight}/>\n            <mesh position={[0, 0, 0.01]} receiveShadow >\n                <planeBufferGeometry args={[vpWidth+5,vpHeight+5]} />\n                <meshPhysicalMaterial color='white' />\n            </mesh>\n            <mesh position={[0, 0, -80]} receiveShadow >\n                <planeBufferGeometry args={[vpWidth+50,vpHeight+50]} />\n                <meshPhysicalMaterial color='aquamarine' />\n            </mesh>\n            <Suspense fallback={null}>\n                <Model\n                    path='/lowpoly_earth/scene.gltf'\n                    scale={new Array(3).fill(0.04)}\n                    position={[0,0,-40]}\n                />\n            </Suspense>\n        </group>\n    )\n}\n\nexport default Layout;","import { useThree, useFrame } from 'react-three-fiber';\nimport { useAspect } from '@react-three/drei';\nimport Text from './Text';\nimport { Box, Flex } from '@react-three/flex';\nimport state from '../state'\nimport * as THREE from 'three'\nimport Bulb from './Bulb';\nimport { useRef } from 'react'\n\nconst Header = props => {\n    const menuRef = useRef()\n    const { size } = useThree();\n    const [vpWidth] = useAspect(\"cover\", size.width, size.height)\n    const width = Math.min(vpWidth-10, 80)\n    const vec = new THREE.Vector3()\n    useFrame(() => {\n        if (state.top === 0) menuRef.current.position.lerp(vec.set(0,0,-5), 0.1)\n        else menuRef.current.position.lerp(vec.set(0,0,0), 0.1)\n    })\n    return (\n        <Flex \n            size={[width]}\n            position={[-width/2,33,-0.1]}\n            dir='row' \n            justify='space-between' \n            align='center'\n        >\n            <Box align='center' height='auto'>\n                <Box centerAnchor>\n                    <Text>\n                        Hayden Linder\n                    </Text>\n                </Box>\n                <Bulb position={[9.5,-4,5]} \n                />\n                <Box centerAnchor>\n                    <Text size={0.7}>\n                        Web Developer\n                    </Text>\n                </Box>\n            </Box>\n            <Box centerAnchor>\n                <mesh \n                    ref={menuRef}\n                    castShadow receiveShadow\n                    onPointerDown={e => state.top = 0} \n                    onPointerEnter={e => e.object.scale.lerp(new THREE.Vector3(1.1,1.1,1.1),1)}\n                    onPointerLeave={e => e.object.scale.lerp(new THREE.Vector3(1,1,1),1)}\n                >\n                    <boxBufferGeometry args={[10,4,0.5]}/>\n                    <meshPhysicalMaterial color='blue'/>\n                    <Text color='white' position={[0,0,0.5]}>\n                        Menu\n                    </Text>\n                </mesh>\n            </Box>\n        </Flex>\n    )\n}\n\nexport default Header","import { Canvas } from 'react-three-fiber';\nimport { Suspense, useEffect } from 'react';\nimport Bulb from './components/Bulb';\nimport Layout from './components/Layout';\nimport { softShadows, Html } from '@react-three/drei'\nimport Header from './components/Header'\nimport state from './state'\n\nsoftShadows()\nfunction App() {\n\n  const handleTouchStart = e => {\n    state.touchY = e.touches.item(0).pageY\n  }\n\n  const handleTouchMove = e => {\n    const touchY = e.touches.item(0).pageY\n    const event = { nativeEvent: { deltaY: 16*(state.touchY - touchY) } }\n    handleScroll(event)\n    state.touchY = touchY\n  }\n\n  const handleScroll = e => {\n    const delta = e.nativeEvent.deltaY/16\n    if (delta < 0)\n      state.top = Math.max(state.top + delta,0)\n    else\n      state.top = Math.min(state.top + delta,80)\n  }\n\n  return (\n    <div \n      style={{ \n        height: '101vh', \n        width: '100vw',\n      }}\n      onWheel={handleScroll}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n    >\n      <Canvas \n        concurrent\n        camera={ { position: [0,0,50] } }\n        colorManagement\n        shadowMap\n      >\n        <axesHelper args={[5]}/>\n        <ambientLight intensity={0.3}/>\n        <Bulb position={[0, 10, 20]} />\n        <Suspense fallback={<Html center><h1 style={{color: 'black', fontSize: 100}}>Loading...</h1></Html>}>\n          <Header />\n          <Layout />\n        </Suspense>\n      </Canvas> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}