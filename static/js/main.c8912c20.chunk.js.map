{"version":3,"sources":["components/Bulb.jsx","state.js","components/Text.jsx","components/AboutMenuItem.jsx","components/Layout.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Bulb","position","visible","castShadow","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","color","args","state","top","touchY","Text","children","vAlign","hAlign","size","props","font","THREE","data","config","useMemo","height","curveSegments","bevelThickness","mesh","useUpdate","self","geometry","computeBoundingBox","boundingBox","getSize","x","y","scale","ref","receiveShadow","clearcoat","AboutMenuItem","useRef","sphereRef","t","Math","random","PI","useFrame","clock","current","rotation","sin","getElapsedTime","hover","lerp","z","centerAnchor","align","m","onPointerEnter","e","onPointerLeave","side","transparent","transmission","reflectivity","roughness","Layout","groupRef","vec","useEffect","window","scrollTo","set","three","useThree","useAspect","width","vpWidth","vpHeight","min","justify","dir","wrap","Header","menuRef","onPointerDown","object","softShadows","App","handleScroll","delta","nativeEvent","deltaY","max","style","onWheel","onTouchStart","touches","item","pageY","onTouchMove","event","concurrent","camera","colorManagement","shadowMap","intensity","fallback","center","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8912c20.chunk.js","sourcesContent":["const Bulb = ({ position = [0,0,0], visible = false }) => {\n    return (\n        <mesh position={position}>\n            <pointLight castShadow \n                // shadow-mapSize-width={1024/4}\n                // shadow-mapSize-height={1024/4}\n                shadow-camera-far={75}\n                shadow-camera-left={-10}\n                shadow-camera-right={10}\n                shadow-camera-top={10}\n                shadow-camera-bottom={-10}\n            />\n            <meshStandardMaterial color='yellow' visible={visible}/>\n            <sphereBufferGeometry args={[0.2,100,100]}/>\n        </mesh>\n    )\n}\n\nexport default Bulb","const state = {\n    top: 0,\n    touchY: 0\n}\n\nexport default state;","import * as THREE from \"three\"\nimport React, { useMemo } from \"react\"\nimport { useUpdate } from \"react-three-fiber\"\nimport * as data from 'three/examples/fonts/helvetiker_bold.typeface.json'\n\nconst Text = ({\n    children,\n    vAlign = \"center\",\n    hAlign = \"center\",\n    size = 1,\n    color = \"#000000\",\n    ...props\n}) => {\n    const font = new THREE.Font(data.default)\n    const config = useMemo(\n        () => ({\n            font,\n            size: 16,\n            height: 2,\n            curveSegments: 64,\n            // bevelEnabled: true,\n            bevelThickness: 3,\n            // bevelSize: 1,\n            // bevelOffset: 0,\n            // bevelSegments: 8,\n        }),\n        [font]\n    )\n    const mesh = useUpdate(\n        (self) => {\n            const size = new THREE.Vector3()\n            self.geometry.computeBoundingBox()\n            self.geometry.boundingBox.getSize(size)\n            self.position.x = hAlign === \"center\" ? -size.x / 2 : hAlign === \"right\" ? 0 : -size.x\n            self.position.y = vAlign === \"center\" ? -size.y / 2 : vAlign === \"top\" ? 0 : -size.y\n        },\n        [children],\n    )\n    return (\n        <group {...props} scale={[0.1 * size, 0.1 * size, 0.1]}>\n            <mesh ref={mesh} castShadow receiveShadow>\n                <textGeometry args={[children, config]} />\n                <meshPhysicalMaterial color={color} clearcoat={1}/>\n            </mesh>\n        </group>\n    )\n}\n\nexport default Text;","import { Box } from '@react-three/flex'\nimport { useFrame } from 'react-three-fiber'\nimport { useRef } from 'react'\nimport Text from './Text'\nimport * as THREE from 'three'\n\nconst AboutMenuItem = props => {\n    const ref = useRef()\n    const sphereRef = useRef()\n    const t = Math.random()*Math.PI\n    useFrame(({ clock }) => {\n        sphereRef.current.rotation.y -= 0.05\n        ref.current.position.y += 0.04*Math.sin(2*clock.getElapsedTime() + t)\n        \n        switch (ref.current.hover) {\n            case 1:\n                ref.current.position.lerp({ x: 0, y:0, z:10 }, 0.02)\n            case 2:\n                ref.current.position.lerp({ x: 0, y:0, z:0 }, 0.02)\n                if (ref.current.position.y === 0) ref.current.hover = 0\n            default: \n                break\n        } \n    });\n\n    const handlePointerEnter = e => {\n        ref.current.hover = 1\n    }\n    const handlePointerLeave = e => {\n        ref.current.hover = 2\n    }\n\n    return (\n        <group ref={ref} >\n            <Box centerAnchor align='center' m={1}>\n                <group ref={sphereRef}>\n                    <mesh position={[0, -1, 0]} onPointerEnter={handlePointerEnter} onPointerLeave={handlePointerLeave}>\n                        <sphereBufferGeometry args={[6,100,100]} />\n                        <meshPhysicalMaterial side={THREE.DoubleSide} transparent transmission={0.9} clearcoat={1} reflectivity={1} roughness={0}/>\n                    </mesh>\n                    <Text color='red' size={1.5} position={[0,0,2]} >\n                        ?\n                    </Text>\n                    <mesh castShadow receiveShadow>\n                        <sphereBufferGeometry args={[2, 100, 100]}/>\n                        <meshPhysicalMaterial /> \n                    </mesh>\n                </group>\n                <Text position={[0,-3,0]}>\n                    About\n                </Text>\n            </Box>\n        </group>\n    )\n}\n\nexport default AboutMenuItem","import { Flex, Box } from '@react-three/flex';\nimport { useRef, useEffect } from 'react';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport { useAspect } from '@react-three/drei'\nimport state from '../state';\nimport * as THREE from 'three';\nimport Text from './Text';\nimport AboutMenuItem from './AboutMenuItem'\n\nconst Layout = () => {\n    const groupRef = useRef()\n    const vec = new THREE.Vector3()\n    useEffect(() => {\n        window.scrollTo(0, 1)\n        // state.top = 0;\n        groupRef.current.position.lerp(vec.set(0,0,20),1)\n    })\n    useFrame(three => {\n        window.state = three\n        groupRef.current.position.lerp(\n            vec.set(0, 0, state.top),\n            0.1\n        )\n    })\n\n    const { size } = useThree();\n    const [vpWidth, vpHeight] = useAspect(\"cover\", size.width, size.height)\n    const width = Math.min(vpWidth - 10 , 80)\n\n    return (\n        <group ref={groupRef}>\n            <Flex\n                justify='space-around'\n                dir='row'\n                wrap='wrap'\n                position={[-width/2,20, 3]}\n                size={[width,0,0]}\n            >\n                <AboutMenuItem /> \n                <AboutMenuItem /> \n                <AboutMenuItem /> \n                <AboutMenuItem /> \n            </Flex>\n            <mesh position={[0, 0, 0.01]} receiveShadow >\n                <planeBufferGeometry args={[vpWidth+5,vpHeight+5]} />\n                <meshPhysicalMaterial color='white' />\n            </mesh>\n            <mesh position={[0, 0, -80]} receiveShadow >\n                <planeBufferGeometry args={[vpWidth+50,vpHeight+50]} />\n                <meshPhysicalMaterial color='aquamarine' />\n            </mesh>\n        </group>\n    )\n}\n\nexport default Layout;","import { useThree, useFrame } from 'react-three-fiber';\nimport { useAspect } from '@react-three/drei';\nimport Text from './Text';\nimport { Box, Flex } from '@react-three/flex';\nimport state from '../state'\nimport * as THREE from 'three'\nimport Bulb from './Bulb';\nimport { useRef } from 'react'\n\nconst Header = props => {\n    const menuRef = useRef()\n    const { size } = useThree();\n    const [vpWidth] = useAspect(\"cover\", size.width, size.height)\n    const width = Math.min(vpWidth-10, 80)\n    const vec = new THREE.Vector3()\n    useFrame(() => {\n        if (state.top === 0) menuRef.current.position.lerp(vec.set(0,0,-5), 0.1)\n        else menuRef.current.position.lerp(vec.set(0,0,0), 0.1)\n    })\n    return (\n        <Flex \n            size={[width]}\n            position={[-width/2,30,-0.1]}\n            dir='row' \n            justify='space-between' \n            align='center'\n        >\n            <Box align='center' height='auto'>\n                <Box centerAnchor>\n                    <Text>\n                        Hayden Linder\n                    </Text>\n                </Box>\n                <Bulb position={[9.5,-4,5]} \n                />\n                <Box centerAnchor>\n                    <Text size={0.7}>\n                        Web Developer\n                    </Text>\n                </Box>\n            </Box>\n            <Box centerAnchor>\n                <mesh \n                    ref={menuRef}\n                    castShadow receiveShadow\n                    onPointerDown={e => state.top = 0} \n                    onPointerEnter={e => e.object.scale.lerp(new THREE.Vector3(1.1,1.1,1.1),1)}\n                    onPointerLeave={e => e.object.scale.lerp(new THREE.Vector3(1,1,1),1)}\n                >\n                    <boxBufferGeometry args={[10,4,0.5]}/>\n                    <meshPhysicalMaterial color='blue'/>\n                    <Text color='white' position={[0,0,0.5]}>\n                        Menu\n                    </Text>\n                </mesh>\n            </Box>\n        </Flex>\n    )\n}\n\nexport default Header","import { Canvas } from 'react-three-fiber';\nimport { Suspense, useEffect } from 'react';\nimport Bulb from './components/Bulb';\nimport Layout from './components/Layout';\nimport { softShadows, Html } from '@react-three/drei'\nimport Header from './components/Header'\nimport state from './state'\nimport Model from './components/Model'\n\nsoftShadows()\nfunction App() {\n\n  const handleTouchStart = e => {\n    state.touchY = e.touches.item(0).pageY\n  }\n\n  const handleTouchMove = e => {\n    const touchY = e.touches.item(0).pageY\n    const event = { nativeEvent: { deltaY: 16*(state.touchY - touchY) } }\n    handleScroll(event)\n    state.touchY = touchY\n  }\n\n  const handleScroll = e => {\n    const delta = e.nativeEvent.deltaY/16\n    if (delta < 0)\n      state.top = Math.max(state.top + delta,0)\n    else\n      state.top = Math.min(state.top + delta,80)\n  }\n  return (\n    <div \n      style={{ \n        height: '101vh', \n        width: '100vw',\n      }}\n      onWheel={handleScroll}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n    >\n      <Canvas \n        concurrent\n        camera={ { position: [0,0,50] } }\n        colorManagement\n        shadowMap\n      >\n        <axesHelper args={[5]}/>\n        <ambientLight intensity={0.3}/>\n        <Bulb position={[0, 10, 20]} />\n        <Suspense fallback={<Html center><h1 style={{color: 'black', fontSize: 100}}>Loading...</h1></Html>}>\n          <Header />\n          <Layout />\n          <Suspense fallback={null}>\n            {/* <Model \n              path='/lowpoly_earthv2/scene.gltf'\n              scale={[new Array(3).fill(0.1)]}\n            /> */}\n          </Suspense>\n        </Suspense>\n      </Canvas> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}