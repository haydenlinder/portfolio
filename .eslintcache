[{"/Users/hayden/Desktop/projects/portfolio/src/App.js":"1","/Users/hayden/Desktop/projects/portfolio/src/components/Header.jsx":"2","/Users/hayden/Desktop/projects/portfolio/src/components/Layout.jsx":"3","/Users/hayden/Desktop/projects/portfolio/src/components/Text.jsx":"4","/Users/hayden/Desktop/projects/portfolio/src/components/Bulb.jsx":"5","/Users/hayden/Desktop/projects/portfolio/src/state.js":"6","/Users/hayden/Desktop/projects/portfolio/src/components/Model.jsx":"7","/Users/hayden/Desktop/projects/portfolio/src/reportWebVitals.js":"8","/Users/hayden/Desktop/projects/portfolio/src/index.js":"9","/Users/hayden/Desktop/projects/portfolio/src/setupTests.js":"10","/Users/hayden/Desktop/projects/portfolio/src/components/Menu.jsx":"11","/Users/hayden/Desktop/projects/portfolio/src/components/Scroll.jsx":"12","/Users/hayden/Desktop/projects/portfolio/src/components/About.jsx":"13","/Users/hayden/Desktop/projects/portfolio/src/components/MenuItem.jsx":"14","/Users/hayden/Desktop/projects/portfolio/src/components/Projects.jsx":"15","/Users/hayden/Desktop/projects/portfolio/src/components/ProjectItem.jsx":"16"},{"size":888,"mtime":1607537174499,"results":"17","hashOfConfig":"18"},{"size":2739,"mtime":1607534317462,"results":"19","hashOfConfig":"18"},{"size":1129,"mtime":1607466021831,"results":"20","hashOfConfig":"18"},{"size":1444,"mtime":1607451577954,"results":"21","hashOfConfig":"18"},{"size":485,"mtime":1607228827648,"results":"22","hashOfConfig":"18"},{"size":78,"mtime":1607536055840,"results":"23","hashOfConfig":"18"},{"size":811,"mtime":1607237014552,"results":"24","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"18"},{"size":500,"mtime":499162500000,"results":"26","hashOfConfig":"18"},{"size":241,"mtime":499162500000,"results":"27","hashOfConfig":"28"},{"size":2166,"mtime":1607487890425,"results":"29","hashOfConfig":"18"},{"size":1212,"mtime":1607465395414,"results":"30","hashOfConfig":"18"},{"size":3220,"mtime":1607496370890,"results":"31","hashOfConfig":"18"},{"size":2964,"mtime":1607533663496,"results":"32","hashOfConfig":"18"},{"size":3470,"mtime":1607542034462,"results":"33","hashOfConfig":"18"},{"size":1271,"mtime":1607542081122,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"mp3ccl",{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fs2drw",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"37"},"/Users/hayden/Desktop/projects/portfolio/src/App.js",[],["75","76"],"/Users/hayden/Desktop/projects/portfolio/src/components/Header.jsx",["77","78"],"import state from '../state'\nimport { Html } from '@react-three/drei'\nimport { Flex } from '@react-three/flex';\nimport { useThree, useFrame } from 'react-three-fiber'\nimport { useAspect } from '@react-three/drei'\nimport { useRef } from 'react'\n\nconst Header = props => {\n    const menuRef = useRef()\n    const handleClick = e => {\n        state.top = 0;\n    }\n    useFrame(() => {\n        const menu = menuRef.current\n        if (menu && state.top === 0) menu.style.display = 'none'\n        if (menu && state.top !== 0) menu.style.display = 'block'\n    })\n    const { size } = useThree();\n    const [vpWidth, vpHeight] = useAspect(\"cover\", size.width, size.height)\n    return (\n        <Html center position={[0,vpHeight/2-4,0]}>\n            <header\n                style={{\n                    background: '#e7e7e7',\n                    zIndex: 1,\n                    width: '100vw',\n                    margin: 'auto',\n                    padding: 10,\n                    paddingTop: 20,\n                    paddingBottom: 20,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    minWidth: '250px',\n                }}\n                >\n                <nav \n                    style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        width: '80%',\n                        maxWidth: '600px',\n                    }}\n                    >\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center'\n                        }}\n                    >\n                        <div style={{\n                            fontWeight: 'bold',\n                            fontSize: '20px',\n                        }}>\n                            Hayden Linder\n                        </div>\n                        <div>Web Developer</div>\n                    </div>\n                    <div\n                        ref={menuRef}\n                        style={{\n                            padding: '10px',\n                            border: '1px solid black',\n                            borderRadius: 10,\n                            cursor: 'pointer',\n                            right: '20px',\n                            // position: 'absolute',\n                            // top: '20px',\n                        }}\n                        onClick={handleClick}\n                    >\n                        Menu\n                    </div>\n                </nav>\n            </header>\n        </Html>\n    )\n}\n\nexport default Header","/Users/hayden/Desktop/projects/portfolio/src/components/Layout.jsx",["79","80","81"],"import { Flex, Box } from '@react-three/flex';\nimport { useRef, useEffect } from 'react';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport { useAspect } from '@react-three/drei'\nimport state from '../state';\nimport * as THREE from 'three';\nimport Menu from './Menu'\nimport About from './About'\nimport Projects from './Projects'\n\nconst Layout = () => {\n    const groupRef = useRef()\n    const vec = new THREE.Vector3()\n    useEffect(() => {\n        window.scrollTo(0, 1)\n    })\n    useEffect(() => {\n        groupRef.current.position.lerp(\n            vec.set(0,0,20),\n            1\n        )\n\n    },[])\n    useFrame(three => {\n        window.state = three\n        groupRef.current.position.lerp(\n            vec.set(0, 0, state.top),\n            0.1\n        )\n    })\n\n    const { size } = useThree();\n    const [vpWidth, vpHeight] = useAspect(\"cover\", size.width, size.height)\n    const width = Math.min(vpWidth - 10 , 80)\n\n    return (\n        <group ref={groupRef}>\n            <Menu width={width} height={vpHeight}/>\n            <About />\n            <Projects />\n        </group>\n    )\n}\n\nexport default Layout;","/Users/hayden/Desktop/projects/portfolio/src/components/Text.jsx",["82"],"import * as THREE from \"three\"\nimport React, { useMemo } from \"react\"\nimport { useUpdate } from \"react-three-fiber\"\nimport * as data from 'three/examples/fonts/helvetiker_bold.typeface.json'\n\nconst Text = ({\n    children,\n    vAlign = \"center\",\n    hAlign = \"center\",\n    size = 1,\n    thickness = 2,\n    color = \"#000000\",\n    ...props\n}) => {\n    const config = useMemo(() => {\n        const font = new THREE.Font(data.default)\n        return({\n            font,\n            size: 16,\n            height: thickness,\n            curveSegments: 64,\n            // bevelEnabled: true,\n            bevelThickness: 3,\n            // bevelSize: 1,\n            // bevelOffset: 0,\n            // bevelSegments: 8,\n        })\n    }, [])\n    const mesh = useUpdate(\n        (self) => {\n            const size = new THREE.Vector3()\n            self.geometry.computeBoundingBox()\n            self.geometry.boundingBox.getSize(size)\n            self.position.x = hAlign === \"center\" ? -size.x / 2 : hAlign === \"right\" ? 0 : -size.x\n            self.position.y = vAlign === \"center\" ? -size.y / 2 : vAlign === \"top\" ? 0 : -size.y\n        },\n        [children],\n    )\n    return (\n        <group {...props} scale={[0.1 * size, 0.1 * size, 0.1]}>\n            <mesh ref={mesh} >\n                <textGeometry args={[children, config]} />\n                <meshPhysicalMaterial color={color} />\n            </mesh>\n        </group>\n    )\n}\n\nexport default Text;","/Users/hayden/Desktop/projects/portfolio/src/components/Bulb.jsx",[],"/Users/hayden/Desktop/projects/portfolio/src/state.js",[],"/Users/hayden/Desktop/projects/portfolio/src/components/Model.jsx",[],"/Users/hayden/Desktop/projects/portfolio/src/reportWebVitals.js",[],"/Users/hayden/Desktop/projects/portfolio/src/index.js",[],"/Users/hayden/Desktop/projects/portfolio/src/setupTests.js",[],"/Users/hayden/Desktop/projects/portfolio/src/components/Menu.jsx",[],"/Users/hayden/Desktop/projects/portfolio/src/components/Scroll.jsx",[],"/Users/hayden/Desktop/projects/portfolio/src/components/About.jsx",["83"],"import { useRef } from 'react'\nimport Model from './Model'\nimport { useFrame } from 'react-three-fiber'\nimport { Html } from '@react-three/drei'\nimport state from '../state'\nimport Text from './Text'\nimport * as THREE from 'three'\n\nconst About = ({ }) => {\n    const modelRef = useRef()\n    const textRef = useRef()\n    const vec = new THREE.Vector3()\n    useFrame(() => {\n        const text = textRef.current\n        if (state.top > 50 && text && text.style.display === 'none') text.style.display = 'flex'\n        if (state.top < 50 && text && text.style.display === 'flex') text.style.display = 'none'\n        if (modelRef.current) {\n            modelRef.current.rotation.setFromVector3(\n                modelRef.current.rotation.toVector3()\n                .lerp(vec.set(0.1,6.28*state.top/80 + 4.4,0),0.1)\n            )\n        }\n    })\n\n    const handleClick = e => {\n        state.top = 160\n    }\n\n    return (\n        <group position={[0, 0, -80]}>\n            <mesh  receiveShadow >\n                <planeBufferGeometry args={[999, 999]} />\n                <meshPhysicalMaterial color='aquamarine' />\n            </mesh>\n            <Html center position={[0, 1.5, 40]} scaleFactor={10} zIndexRange={[0,0]}>\n                <div ref={textRef} style={{ display: 'flex', fontSize: 30, textAlign: 'center', width: '100vw', flexDirection: 'column', alignItems: 'center' }}>\n                    <div>\n                        I love JavaScript, cooking, skateboaring, and music.\n                    </div>\n                    <br/>\n                    <div>\n                        My background in 3D math gives me an inclination for graphics and computational geometry.\n                    </div>\n                    <br/>\n                    <div \n                        onClick={handleClick}\n                        style={{padding: 10, paddingRight: 30, paddingLeft: 30, border: '1px solid black', fontWeight: 'bold', borderRadius: 10, background: 'rgb(255,255,255, 0.4)', width: 'fit-content', cursor: 'pointer'}}\n                    >\n                        See my projects\n                    </div>\n                </div>\n            </Html>\n            <group \n                ref={modelRef} \n                position={[0, -4.5, 40]}\n                rotation={[0.1,4.4,0]}\n            >\n                <group position={[3, 2, -1]} rotation={[0, 1.9, 0]}>\n                    <mesh>\n                        <planeBufferGeometry args={[3.5,0.6]}/>\n                        <meshBasicMaterial color='black' opacity={0.3} transparent/>\n                    </mesh>\n                    <Text color='white' size={0.2}  thickness={0.2}>\n                        San Francisco\n                    </Text>\n                </group>\n            \n                <Model\n                    path='/lowpoly_earth/scene.gltf'\n                    scale={new Array(3).fill(0.03)}\n                />\n                <group rotation={[-0.5,1,-1.5]} position={[2.5,1.2,-0.6]}>\n                    <Model\n                        path='/push_pin/scene.gltf'\n                        scale={new Array(3).fill(0.001)}\n                    />\n                </group>\n            </group>\n        </group>\n    )\n}\n\nexport default About","/Users/hayden/Desktop/projects/portfolio/src/components/MenuItem.jsx",["84","85"],"import { Box } from '@react-three/flex'\nimport { useFrame } from 'react-three-fiber'\nimport { useRef } from 'react'\nimport { Html, Plane } from '@react-three/drei'\nimport Text from './Text'\nimport * as THREE from 'three'\nimport Model from './Model'\nimport state from '../state'\n\nconst MenuItem = ({ \n    spin = true,\n    text, \n    scrollTo = 80,\n    modelProps = {\n        path: '',\n        scale: [1,1,1]\n    } \n}) => {\n    const sphereRef = useRef()\n    const boxRef = useRef()\n\n    const handlePointerEnter = e => {\n        sphereRef.current.isHovered = true\n        boxRef.current.children.forEach(child => { \n            if (child.isMesh) child.material.opacity = 1\n        })\n    }\n    const handlePointerLeave = e => {\n        sphereRef.current.isHovered = false\n        sphereRef.current.isPointerDown = false\n        boxRef.current.children.forEach(child => {\n            if (child.isMesh) child.material.opacity = 0.7\n        })\n    }\n    const handlePointerDown = e => {\n        sphereRef.current.isPointerDown = true\n    }\n    const handlePointerUp = e => {\n        if (sphereRef.current.isPointerDown) state.top = scrollTo\n        sphereRef.current.isPointerDown = false\n    }\n\n    const listeners = {\n        onPointerEnter: handlePointerEnter, \n        onPointerLeave: handlePointerLeave,\n        onPointerDown: handlePointerDown, \n        onPointerUp: handlePointerUp,\n    }\n\n    return (\n        <group \n            ref={sphereRef}\n        >\n            <Box \n                centerAnchor \n            >\n                <group ref={boxRef} {...listeners}>\n                    <Plane args={[12,12]}  receiveShadow>\n                        <meshPhysicalMaterial transparent opacity={0.7} />\n                    </Plane> \n                    <Plane args={[12,12]} rotation={[Math.PI/2,0,0]} position={[0,6,6]} receiveShadow>\n                        <meshPhysicalMaterial transparent opacity={0.7} />\n                    </Plane> \n                    <Plane args={[12,12]} rotation={[Math.PI/2,0,0]} position={[0,-6,6]} receiveShadow>\n                        <meshPhysicalMaterial transparent opacity={0.7} side={THREE.BackSide}/>\n                    </Plane> \n                    <Plane args={[12,12]} rotation={[0,Math.PI/2,0]} position={[-6,0,6]} receiveShadow>\n                        <meshPhysicalMaterial transparent opacity={0.7} />\n                    </Plane> \n                    <Plane args={[12,12]} rotation={[0,Math.PI/2,0]} position={[6,0,6]} receiveShadow>\n                        <meshPhysicalMaterial transparent opacity={0.7} side={THREE.BackSide}/>\n                    </Plane> \n                </group>\n                <group \n                    position={[0,0,6]}\n                >\n                    <Model {...modelProps} />\n                    <Text position={[0,-3,0]}>\n                        {text}\n                    </Text>\n                </group>\n            </Box>\n        </group>\n    )\n}\n\nexport default MenuItem","/Users/hayden/Desktop/projects/portfolio/src/components/Projects.jsx",["86","87","88"],"import { useRef } from 'react'\nimport Model from './Model'\nimport { useFrame } from 'react-three-fiber'\nimport { Html } from '@react-three/drei'\nimport state from '../state'\nimport Text from './Text'\nimport * as THREE from 'three'\nimport ProjectItem from './ProjectItem'\n\nconst Projects = ({ }) => {\n    const textRef = useRef()\n    const panRef = useRef()\n    const vec1 = new THREE.Vector3()\n    const vec2 = new THREE.Vector3()\n    useFrame(() => {\n        vec1.lerp(vec2.set(0,state.pan,0), 0.1)\n        panRef.current.rotation.setFromVector3(vec1)\n        const text = textRef.current\n        if (state.top > 130 && text && text.style.display === 'none') text.style.display = 'flex'\n        if (state.top < 130 && text && text.style.display === 'flex') text.style.display = 'none'\n    })\n\n    const handleClick = e => {\n        state.top = 160\n    }\n\n    const handlePan = num => {\n        state.pan += num*Math.PI/2\n    }\n\n    return (\n        <group position={[0, 0, -160]} >\n            <mesh receiveShadow >\n                <planeBufferGeometry args={[999, 999]} />\n                <meshPhysicalMaterial/>\n            </mesh>\n            <group position={[0,1,10]} ref={panRef}>\n                <ProjectItem\n                    title='Particles'\n                    description='An orbital physics simulator'\n                    link='https://haydenlinder.github.io/particles'\n                    path='/particles.png'\n                    position={[0, 0, 30]}\n                />\n                <ProjectItem\n                    title='Abocabo'\n                    description='Find cheap produce near you'\n                    link='https://www.abocabo.com'\n                    path='/abocabo.png'\n                    position={[30, 0, 0]}\n                />\n                <ProjectItem\n                    title='Tickets'\n                    description='A project management app featuring complex queries'\n                    link='https://ticats.herokuapp.com/'\n                    path='/tickets.png'\n                    position={[-30, 0, 0]}\n                />\n                <ProjectItem\n                    title='Tesla Paint Picker'\n                    description='The end result from an in-depth tutorial on Three.js and react-three-fiber.'\n                    link='https://haydenlinder.github.io/react-three-fiber/'\n                    path='/fiber.png'\n                    position={[0, 0, -30]}\n                />\n            </group>\n            <Html center position={[0, -5, 40]} scaleFactor={10}>\n                <div ref={textRef} style={{fontSize: 30, display: 'flex', flexDirection: 'column', alignItems: 'center', textAlign: 'center'}}>\n                    <div style={{display: 'flex', justifyContent: 'space-between', fontSize: 100, width: 300}}>\n                        <div onClick={e => handlePan(1)} style={{cursor: 'pointer'}}>⇦</div>\n                        <div onClick={e => handlePan(-1)} style={{cursor: 'pointer'}}>⇨</div>\n                    </div>\n                    <div\n                        onClick={handleClick}\n                        style={{ padding: 10, paddingRight: 30, paddingLeft: 30, border: '1px solid black', fontWeight: 'bold', borderRadius: 10, background: 'rgb(255,255,255, 0.4)', minWidth: 300, cursor: 'pointer' }}\n                    >\n                        See my resume\n                    </div>\n                </div>\n            </Html>\n        </group>\n    )\n}\n\nexport default Projects","/Users/hayden/Desktop/projects/portfolio/src/components/ProjectItem.jsx",["89"],"import { useFrame } from 'react-three-fiber'\nimport { useRef } from 'react'\nimport { Html } from '@react-three/drei'\nimport state from '../state'\n\nconst ProjectItem = ({\n    title = 'title',\n    description = 'description',\n    link = '#',\n    path = '',\n    position = [0,0,0]\n}) => {\n    const ref = useRef()\n    useFrame(() => {\n        const div = ref.current\n        if (state.top > 130 && div && div.style.display === 'none') div.style.display = 'flex'\n        if (state.top < 130 && div && div.style.display === 'flex') div.style.display = 'none'\n    })\n    return (\n        <Html center scaleFactor={10} position={position}>       \n            <div ref={ref} style={{ display: 'flex', fontSize: 30, flexDirection: 'column', alignItems: 'center', margin: 10, textAlign: 'center'}}>\n                <div style={{fontWeight: 'bold'}}>{title}</div>\n                <div>{description}</div>\n                <br/>\n                <a style={{height: '50vh', width: 500, overflow: 'hidden', display: 'flex'}} href={link} target='_blank'>\n                    <img style={{objectFit: 'cover', minWidth: '100%', minHeight: '100%'}} src={process.env.PUBLIC_URL + path} alt={title} />\n                </a>\n            </div>\n        </Html>\n    )\n}\n\nexport default ProjectItem",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":14},{"ruleId":"94","severity":1,"message":"98","line":19,"column":12,"nodeType":"96","messageId":"97","endLine":19,"endColumn":19},{"ruleId":"94","severity":1,"message":"95","line":1,"column":10,"nodeType":"96","messageId":"97","endLine":1,"endColumn":14},{"ruleId":"94","severity":1,"message":"99","line":1,"column":16,"nodeType":"96","messageId":"97","endLine":1,"endColumn":19},{"ruleId":"100","severity":1,"message":"101","line":23,"column":7,"nodeType":"102","endLine":23,"endColumn":9,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":28,"column":8,"nodeType":"102","endLine":28,"endColumn":10,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":9,"column":16,"nodeType":"108","messageId":"109","endLine":9,"endColumn":19},{"ruleId":"94","severity":1,"message":"110","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":18},{"ruleId":"94","severity":1,"message":"111","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":14},{"ruleId":"94","severity":1,"message":"112","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":13},{"ruleId":"94","severity":1,"message":"113","line":6,"column":8,"nodeType":"96","messageId":"97","endLine":6,"endColumn":12},{"ruleId":"106","severity":1,"message":"107","line":10,"column":19,"nodeType":"108","messageId":"109","endLine":10,"endColumn":22},{"ruleId":"114","severity":1,"message":"115","line":25,"column":106,"nodeType":"116","endLine":25,"endColumn":121},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'Flex' is defined but never used.","Identifier","unusedVar","'vpWidth' is assigned a value but never used.","'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'vec'. Either include it or remove the dependency array.","ArrayExpression",["119"],"React Hook useMemo has a missing dependency: 'thickness'. Either include it or remove the dependency array.",["120"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useFrame' is defined but never used.","'Html' is defined but never used.","'Model' is defined but never used.","'Text' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [vec]",{"range":"125","text":"126"},"Update the dependencies array to be: [thickness]",{"range":"127","text":"128"},[613,615],"[vec]",[726,728],"[thickness]"]