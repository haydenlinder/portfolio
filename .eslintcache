[{"/Users/hayden/Desktop/projects/portfolio/src/App.js":"1","/Users/hayden/Desktop/projects/portfolio/src/components/Header.jsx":"2","/Users/hayden/Desktop/projects/portfolio/src/components/Layout.jsx":"3","/Users/hayden/Desktop/projects/portfolio/src/components/Text.jsx":"4","/Users/hayden/Desktop/projects/portfolio/src/components/Bulb.jsx":"5","/Users/hayden/Desktop/projects/portfolio/src/state.js":"6","/Users/hayden/Desktop/projects/portfolio/src/components/Model.jsx":"7","/Users/hayden/Desktop/projects/portfolio/src/reportWebVitals.js":"8","/Users/hayden/Desktop/projects/portfolio/src/index.js":"9","/Users/hayden/Desktop/projects/portfolio/src/setupTests.js":"10","/Users/hayden/Desktop/projects/portfolio/src/components/Menu.jsx":"11","/Users/hayden/Desktop/projects/portfolio/src/components/Scroll.jsx":"12","/Users/hayden/Desktop/projects/portfolio/src/components/About.jsx":"13","/Users/hayden/Desktop/projects/portfolio/src/components/MenuItem.jsx":"14","/Users/hayden/Desktop/projects/portfolio/src/components/Projects.jsx":"15","/Users/hayden/Desktop/projects/portfolio/src/components/ProjectItem.jsx":"16","/Users/hayden/Desktop/projects/portfolio/src/components/Resume.jsx":"17","/Users/hayden/Desktop/projects/portfolio/src/components/Effects.jsx":"18","/Users/hayden/Desktop/projects/portfolio/src/components/ResumePaper.jsx":"19","/Users/hayden/Desktop/projects/portfolio/src/components/Atom.jsx":"20"},{"size":936,"mtime":1607623949820,"results":"21","hashOfConfig":"22"},{"size":2741,"mtime":1607619105080,"results":"23","hashOfConfig":"22"},{"size":1177,"mtime":1607571943097,"results":"24","hashOfConfig":"22"},{"size":1444,"mtime":1607451577954,"results":"25","hashOfConfig":"22"},{"size":485,"mtime":1607228827648,"results":"26","hashOfConfig":"22"},{"size":78,"mtime":1607536055840,"results":"27","hashOfConfig":"22"},{"size":811,"mtime":1607237014552,"results":"28","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"22"},{"size":500,"mtime":499162500000,"results":"30","hashOfConfig":"22"},{"size":241,"mtime":499162500000,"results":"31","hashOfConfig":"22"},{"size":2628,"mtime":1607621682564,"results":"32","hashOfConfig":"22"},{"size":1284,"mtime":1607623483610,"results":"33","hashOfConfig":"22"},{"size":3202,"mtime":1607623082920,"results":"34","hashOfConfig":"22"},{"size":3303,"mtime":1607620167327,"results":"35","hashOfConfig":"22"},{"size":3469,"mtime":1607619314404,"results":"36","hashOfConfig":"22"},{"size":1293,"mtime":1607619615352,"results":"37","hashOfConfig":"22"},{"size":1607,"mtime":1607620281560,"results":"38","hashOfConfig":"22"},{"size":488,"mtime":1607574761981,"results":"39","hashOfConfig":"22"},{"size":2067,"mtime":1607619853667,"results":"40","hashOfConfig":"22"},{"size":2065,"mtime":1607623006910,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fs2drw",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"47"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"47"},"/Users/hayden/Desktop/projects/portfolio/src/App.js",[],"/Users/hayden/Desktop/projects/portfolio/src/components/Header.jsx",["94","95"],"import state from '../state'\nimport { Html } from '@react-three/drei'\nimport { Flex } from '@react-three/flex';\nimport { useThree, useFrame } from 'react-three-fiber'\nimport { useAspect } from '@react-three/drei'\nimport { useRef } from 'react'\n\nconst Header = props => {\n    const menuRef = useRef()\n    const handleClick = e => {\n        state.top = 0;\n    }\n    useFrame(() => {\n        const menu = menuRef.current\n        if (menu && state.top === 0) menu.style.display = 'none'\n        if (menu && state.top !== 0) menu.style.display = 'block'\n    })\n    const { size } = useThree();\n    const [vpWidth, vpHeight] = useAspect(\"cover\", size.width, size.height)\n    return (\n        <Html center position={[0,vpHeight/2-4,0]}>\n            <header\n                style={{\n                    background: '#e7e7e7',\n                    zIndex: 999,\n                    width: '100vw',\n                    margin: 'auto',\n                    padding: 10,\n                    paddingTop: 20,\n                    paddingBottom: 20,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    minWidth: '250px',\n                }}\n                >\n                <nav \n                    style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        width: '80%',\n                        maxWidth: '600px',\n                    }}\n                    >\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center'\n                        }}\n                    >\n                        <div style={{\n                            fontWeight: 'bold',\n                            fontSize: '20px',\n                        }}>\n                            Hayden Linder\n                        </div>\n                        <div>Web Developer</div>\n                    </div>\n                    <div\n                        ref={menuRef}\n                        style={{\n                            padding: '10px',\n                            border: '1px solid black',\n                            borderRadius: 10,\n                            cursor: 'pointer',\n                            right: '20px',\n                            // position: 'absolute',\n                            // top: '20px',\n                        }}\n                        onClick={handleClick}\n                    >\n                        Menu\n                    </div>\n                </nav>\n            </header>\n        </Html>\n    )\n}\n\nexport default Header",["96","97"],"/Users/hayden/Desktop/projects/portfolio/src/components/Layout.jsx",["98","99","100"],"import { Flex, Box } from '@react-three/flex'\nimport { useRef, useEffect } from 'react'\nimport { useFrame, useThree } from 'react-three-fiber'\nimport { useAspect } from '@react-three/drei'\nimport state from '../state'\nimport * as THREE from 'three'\nimport Menu from './Menu'\nimport About from './About'\nimport Projects from './Projects'\nimport Resume from './Resume'\n\nconst Layout = () => {\n    const groupRef = useRef()\n    const vec = new THREE.Vector3()\n    useEffect(() => {\n        window.scrollTo(0, 1)\n    })\n    useEffect(() => {\n        groupRef.current.position.lerp(\n            vec.set(0,0,20),\n            1\n        )\n\n    },[])\n    useFrame(three => {\n        window.state = three\n        groupRef.current.position.lerp(\n            vec.set(0, 0, state.top),\n            0.1\n        )\n    })\n\n    const { size } = useThree();\n    const [vpWidth, vpHeight] = useAspect(\"cover\", size.width, size.height)\n    const width = Math.min(vpWidth - 10 , 80)\n\n    return (\n        <group ref={groupRef}>\n            <Menu width={width} height={vpHeight}/>\n            <About />\n            <Projects />\n            <Resume />\n        </group>\n    )\n}\n\nexport default Layout;","/Users/hayden/Desktop/projects/portfolio/src/components/Text.jsx",["101"],"import * as THREE from \"three\"\nimport React, { useMemo } from \"react\"\nimport { useUpdate } from \"react-three-fiber\"\nimport * as data from 'three/examples/fonts/helvetiker_bold.typeface.json'\n\nconst Text = ({\n    children,\n    vAlign = \"center\",\n    hAlign = \"center\",\n    size = 1,\n    thickness = 2,\n    color = \"#000000\",\n    ...props\n}) => {\n    const config = useMemo(() => {\n        const font = new THREE.Font(data.default)\n        return({\n            font,\n            size: 16,\n            height: thickness,\n            curveSegments: 64,\n            // bevelEnabled: true,\n            bevelThickness: 3,\n            // bevelSize: 1,\n            // bevelOffset: 0,\n            // bevelSegments: 8,\n        })\n    }, [])\n    const mesh = useUpdate(\n        (self) => {\n            const size = new THREE.Vector3()\n            self.geometry.computeBoundingBox()\n            self.geometry.boundingBox.getSize(size)\n            self.position.x = hAlign === \"center\" ? -size.x / 2 : hAlign === \"right\" ? 0 : -size.x\n            self.position.y = vAlign === \"center\" ? -size.y / 2 : vAlign === \"top\" ? 0 : -size.y\n        },\n        [children],\n    )\n    return (\n        <group {...props} scale={[0.1 * size, 0.1 * size, 0.1]}>\n            <mesh ref={mesh} >\n                <textGeometry args={[children, config]} />\n                <meshPhysicalMaterial color={color} />\n            </mesh>\n        </group>\n    )\n}\n\nexport default Text;","/Users/hayden/Desktop/projects/portfolio/src/components/Bulb.jsx",[],"/Users/hayden/Desktop/projects/portfolio/src/state.js",[],"/Users/hayden/Desktop/projects/portfolio/src/components/Model.jsx",[],"/Users/hayden/Desktop/projects/portfolio/src/reportWebVitals.js",[],"/Users/hayden/Desktop/projects/portfolio/src/index.js",[],"/Users/hayden/Desktop/projects/portfolio/src/setupTests.js",[],"/Users/hayden/Desktop/projects/portfolio/src/components/Menu.jsx",[],"/Users/hayden/Desktop/projects/portfolio/src/components/Scroll.jsx",["102","103","104","105"],"import state from '../state'\n\nconst Scroll = ({ pages = 1, children }) => {\n    const handleTouchStart = e => {\n        state.touchY = e.touches.item(0).pageY\n    }\n    const handleTouchMove = e => {\n        const touchY = e.touches.item(0).pageY\n        const event = { nativeEvent: { deltaY: (state.touchY - touchY) } }\n        handleWheel(event)\n        state.touchY = touchY\n    }\n    let friction = 1\n    const handleWheel = e => {\n        if (\n            state.top > 70 && state.top < 83 ||\n            state.top > 150 && state.top < 165\n        ) friction = 20\n        else if (state.top > 75 && state.top < 80) friction = 30\n        else friction = 1\n        let delta = Math.min(Math.abs(e.nativeEvent.deltaY), 5)\n        delta /= friction\n        if (e.nativeEvent.deltaY < 0) delta *= -1\n        if (delta < 0)\n            state.top = Math.max(state.top + delta, 0)\n        else\n            state.top = Math.min(state.top + delta, pages*40)\n    }\n    return (\n        <div\n            style={{\n                height: '101vh',\n                width: '100vw',\n            }}\n            onWheel={handleWheel}\n            onTouchStart={handleTouchStart}\n            onTouchMove={handleTouchMove}\n        >\n            {children}\n        </div>\n    )\n}\n\nexport default Scroll","/Users/hayden/Desktop/projects/portfolio/src/components/About.jsx",["106"],"import { useRef } from 'react'\nimport Model from './Model'\nimport { useFrame } from 'react-three-fiber'\nimport { Html } from '@react-three/drei'\nimport state from '../state'\nimport Text from './Text'\nimport * as THREE from 'three'\n\nconst About = ({ }) => {\n    const modelRef = useRef()\n    const textRef = useRef()\n    const vec = new THREE.Vector3()\n    useFrame(() => {\n        const text = textRef.current\n        if (state.top > 50 && text && text.style.display === 'none') text.style.display = 'flex'\n        if (state.top < 50 && text && text.style.display === 'flex') text.style.display = 'none'\n        if (modelRef.current) {\n            modelRef.current.rotation.setFromVector3(\n                modelRef.current.rotation.toVector3()\n                .lerp(vec.set(0.1,6.28*state.top/80 + 4.4,0),0.1)\n            )\n        }\n    })\n\n    const handleClick = e => {\n        state.top = 160\n    }\n\n    return (\n        <group position={[0, 0, -80]}>\n            <mesh  receiveShadow >\n                <planeBufferGeometry args={[999, 999]} />\n                <meshPhysicalMaterial color='white' />\n            </mesh>\n            <Html center position={[0, 1.5, 40]} scaleFactor={10} zIndexRange={[0,0]}>\n                <div ref={textRef} style={{ display: 'flex', fontSize: 30, textAlign: 'center', width: '100vw', flexDirection: 'column', alignItems: 'center' }}>\n                    <div>\n                        I love JavaScript, cooking, skateboaring, and music.\n                    </div>\n                    <br/>\n                    <div>\n                        My background in 3D math gives me an inclination for computational geometry.\n                    </div>\n                    <br/>\n                    <div \n                        onClick={handleClick}\n                        style={{padding: 10, paddingRight: 30, paddingLeft: 30, border: '1px solid black', fontWeight: 'bold', borderRadius: 10, background: 'rgb(255,255,255, 0.4)', width: 'fit-content', cursor: 'pointer'}}\n                    >\n                        See my projects\n                    </div>\n                </div>\n            </Html>\n            <group \n                ref={modelRef} \n                position={[0, -4.5, 40]}\n                rotation={[0.1,4.4,0]}\n            >\n                <group position={[3, 2, -1]} rotation={[0, 1.9, 0]}>\n                    <mesh>\n                        <planeBufferGeometry args={[3.5,0.6]}/>\n                        <meshBasicMaterial color='black' opacity={0.3} transparent/>\n                    </mesh>\n                    <Text color='white' size={0.2}  thickness={0.2}>\n                        San Francisco\n                    </Text>\n                </group>\n            \n                <Model\n                    path='/lowpoly_earth/scene.gltf'\n                    scale={new Array(3).fill(0.03)}\n                />\n                <group rotation={[-0.5,1,-1.5]} position={[2.5,1.2,-0.6]}>\n                    <Model\n                        path='/push_pin/scene.gltf'\n                        scale={new Array(3).fill(0.001)}\n                    />\n                </group>\n            </group>\n        </group>\n    )\n}\n\nexport default About","/Users/hayden/Desktop/projects/portfolio/src/components/MenuItem.jsx",["107"],"import { Box } from '@react-three/flex'\nimport { useFrame } from 'react-three-fiber'\nimport { useRef } from 'react'\nimport { Html, Plane } from '@react-three/drei'\nimport Text from './Text'\nimport * as THREE from 'three'\nimport Model from './Model'\nimport state from '../state'\n\nconst MenuItem = ({ \n    children,\n    spin = false,\n    text, \n    scrollTo = 80,\n    modelProps = {\n        path: '',\n        scale: [1,1,1]\n    } \n}) => {\n    const sphereRef = useRef()\n    const boxRef = useRef()\n    const modelRef = useRef()\n\n    useFrame(() => {\n        const model = modelRef.current\n        if (spin) model.rotation.y += 0.01\n    })\n    \n    const handlePointerEnter = e => {\n        sphereRef.current.isHovered = true\n        boxRef.current.children.forEach(child => { \n            if (child.isMesh) child.material.opacity = 1\n        })\n    }\n    const handlePointerLeave = e => {\n        sphereRef.current.isHovered = false\n        sphereRef.current.isPointerDown = false\n        boxRef.current.children.forEach(child => {\n            if (child.isMesh) child.material.opacity = 0.7\n        })\n    }\n    const handlePointerDown = e => {\n        sphereRef.current.isPointerDown = true\n    }\n    const handlePointerUp = e => {\n        if (sphereRef.current.isPointerDown) state.top = scrollTo\n        sphereRef.current.isPointerDown = false\n    }\n\n    const listeners = {\n        onPointerEnter: handlePointerEnter, \n        onPointerLeave: handlePointerLeave,\n        onPointerDown: handlePointerDown, \n        onPointerUp: handlePointerUp,\n    }\n\n    return (\n        <group \n            ref={sphereRef}\n        >\n            <Box \n                centerAnchor \n            >\n                <group ref={boxRef} {...listeners}>\n                    <Plane args={[12,12]}  receiveShadow>\n                        <meshPhysicalMaterial transparent opacity={0.7} />\n                    </Plane> \n                    <Plane args={[12,12]} rotation={[Math.PI/2,0,0]} position={[0,6,6]} receiveShadow>\n                        <meshPhysicalMaterial transparent opacity={0.7} />\n                    </Plane> \n                    <Plane args={[12,12]} rotation={[Math.PI/2,0,0]} position={[0,-6,6]} receiveShadow>\n                        <meshPhysicalMaterial transparent opacity={0.7} side={THREE.BackSide}/>\n                    </Plane> \n                    <Plane args={[12,12]} rotation={[0,Math.PI/2,0]} position={[-6,0,6]} receiveShadow>\n                        <meshPhysicalMaterial transparent opacity={0.7} />\n                    </Plane> \n                    <Plane args={[12,12]} rotation={[0,Math.PI/2,0]} position={[6,0,6]} receiveShadow>\n                        <meshPhysicalMaterial transparent opacity={0.7} side={THREE.BackSide}/>\n                    </Plane> \n                </group>\n                <group \n                    position={[0,0,6]}\n                >\n                    {children ? \n                        children : \n                        <group ref={modelRef}>\n                            <Model {...modelProps} />\n                        </group>\n                    }\n                    <Text position={[0,-3,0]}>\n                        {text}\n                    </Text>\n                </group>\n            </Box>\n        </group>\n    )\n}\n\nexport default MenuItem","/Users/hayden/Desktop/projects/portfolio/src/components/Projects.jsx",["108","109","110"],"import { useRef } from 'react'\nimport Model from './Model'\nimport { useFrame } from 'react-three-fiber'\nimport { Html } from '@react-three/drei'\nimport state from '../state'\nimport Text from './Text'\nimport * as THREE from 'three'\nimport ProjectItem from './ProjectItem'\n\nconst Projects = ({ }) => {\n    const textRef = useRef()\n    const panRef = useRef()\n    const vec1 = new THREE.Vector3()\n    const vec2 = new THREE.Vector3()\n    useFrame(() => {\n        vec1.lerp(vec2.set(0,state.pan,0), 0.1)\n        panRef.current.rotation.setFromVector3(vec1)\n        const text = textRef.current\n        if (state.top > 130 && text && text.style.display === 'none') text.style.display = 'flex'\n        if (state.top < 130 && text && text.style.display === 'flex') text.style.display = 'none'\n    })\n\n    const handleClick = e => {\n        state.top = 240\n    }\n\n    const handlePan = num => {\n        state.pan += num*Math.PI/2\n    }\n\n    return (\n        <group position={[0, 0, -160]} >\n            <mesh receiveShadow >\n                <planeBufferGeometry args={[999, 999]} />\n                <meshPhysicalMaterial/>\n            </mesh>\n            <group position={[0,1,9]} ref={panRef}>\n                <ProjectItem\n                    title='Particles'\n                    description='An orbital physics simulator'\n                    link='https://haydenlinder.github.io/particles'\n                    path='/particles.png'\n                    position={[0, 0, 30]}\n                />\n                <ProjectItem\n                    title='Abocabo'\n                    description='Find cheap produce near you'\n                    link='https://www.abocabo.com'\n                    path='/abocabo.png'\n                    position={[30, 0, 0]}\n                />\n                <ProjectItem\n                    title='Tickets'\n                    description='A project management app featuring complex queries'\n                    link='https://ticats.herokuapp.com/'\n                    path='/tickets.png'\n                    position={[-30, 0, 0]}\n                />\n                <ProjectItem\n                    title='Tesla Paint Picker'\n                    description='The end result from an in-depth tutorial on Three.js and react-three-fiber.'\n                    link='https://haydenlinder.github.io/react-three-fiber/'\n                    path='/fiber.png'\n                    position={[0, 0, -30]}\n                />\n            </group>\n            <Html center position={[0, -4, 40]} scaleFactor={10}>\n                <div ref={textRef} style={{fontSize: 30, display: 'flex', flexDirection: 'column', alignItems: 'center', textAlign: 'center'}}>\n                    <div style={{display: 'flex', justifyContent: 'space-between', fontSize: 100, width: 300}}>\n                        <div onClick={e => handlePan(1)} style={{cursor: 'pointer'}}>⇦</div>\n                        <div onClick={e => handlePan(-1)} style={{cursor: 'pointer'}}>⇨</div>\n                    </div>\n                    <div\n                        onClick={handleClick}\n                        style={{ padding: 10, paddingRight: 30, paddingLeft: 30, border: '1px solid black', fontWeight: 'bold', borderRadius: 10, background: 'rgb(255,255,255, 0.4)', minWidth: 300, cursor: 'pointer' }}\n                    >\n                        See my resume\n                    </div>\n                </div>\n            </Html>\n        </group>\n    )\n}\n\nexport default Projects","/Users/hayden/Desktop/projects/portfolio/src/components/ProjectItem.jsx",["111"],"import { useFrame } from 'react-three-fiber'\nimport { useRef } from 'react'\nimport { Html } from '@react-three/drei'\nimport state from '../state'\n\nconst ProjectItem = ({\n    title = 'title',\n    description = 'description',\n    link = '#',\n    path = '',\n    position = [0,0,0]\n}) => {\n    const ref = useRef()\n    useFrame(() => {\n        const div = ref.current\n        if (state.top > 130 && div && div.style.display === 'none') div.style.display = 'flex'\n        if (state.top < 130 && div && div.style.display === 'flex') div.style.display = 'none'\n    })\n    return (\n        <Html center scaleFactor={10} position={position} zIndexRange={[999,0]}>       \n            <div ref={ref} style={{ display: 'flex', fontSize: 30, flexDirection: 'column', alignItems: 'center', margin: 10, textAlign: 'center'}}>\n                <div style={{fontWeight: 'bold'}}>{title}</div>\n                <div>{description}</div>\n                <br/>\n                <a style={{height: '50vh', width: 500, overflow: 'hidden', display: 'flex'}} href={link} target='_blank'>\n                    <img style={{objectFit: 'cover', minWidth: '100%', minHeight: '100%'}} src={process.env.PUBLIC_URL + path} alt={title} />\n                </a>\n            </div>\n        </Html>\n    )\n}\n\nexport default ProjectItem","/Users/hayden/Desktop/projects/portfolio/src/components/Resume.jsx",["112","113"],"import { useRef } from 'react'\nimport { useFrame } from 'react-three-fiber' \nimport state from '../state'\nimport ResumePaper from './ResumePaper'\nimport { Html } from '@react-three/drei'\n\nconst Resume = ({}) => {\n    useFrame(() => {\n        const link = linkRef.current\n        if (state.top >= 120 && link.style.display === 'none') link.style.display = 'block'\n        if (state.top < 120 && link.style.display === 'block') link.style.display = 'none'\n    })\n    const linkRef = useRef()\n    return (\n        <group position={[0,0,-240]}>\n            <mesh receiveShadow>\n                <planeBufferGeometry args={[999,999]}/>\n                <meshPhysicalMaterial color='white'/>\n            </mesh>\n            <group position={[0, -1, 47]}>\n                <mesh receiveShadow castShadow  rotation={[0,Math.PI/4,0]}>\n                    <boxBufferGeometry args={[1,1,1]}/>\n                    <meshPhysicalMaterial />\n                </mesh>\n                <Html center position={[0,1.6,0]} scaleFactor={5}> \n                    <a \n                        ref={linkRef}\n                        href={process.env.PUBLIC_URL + '/hayden_linder_resume.pdf'} \n                        download\n                        style={{\n                            height: 210,\n                            width: 140,\n                            display: 'none',\n                        }}\n                    ></a> \n                </Html>\n                <group position={[0,1.5,0]}>\n                    <ResumePaper />\n                </group>\n            </group>\n        </group>\n    )\n}\n\nexport default Resume","/Users/hayden/Desktop/projects/portfolio/src/components/Effects.jsx",["114"],"/Users/hayden/Desktop/projects/portfolio/src/components/ResumePaper.jsx",["115","116"],"import { useRef } from 'react'\nimport { useFrame, useLoader } from 'react-three-fiber'\nimport { TextureLoader } from 'three'\n\nconst Arrow = ({}) => {\n    return (\n        <group position={[0, 0, 0.1]}>\n            <mesh position={[0, -0.1, 0]} scale={new Array(3).fill(0.1)} rotation={[0, 0, Math.PI]}>\n                <geometry>\n                    <face3 args={[0, 1, 2]} attachArray='faces' />\n                    <vector3 attachArray='vertices' args={[-1, 0, 0]} />\n                    <vector3 attachArray='vertices' args={[1, 0, 0]} />\n                    <vector3 attachArray='vertices' args={[0, 1, 0]} />\n                </geometry>\n                <meshBasicMaterial transparent opacity={0.6} color='black' />\n            </mesh>\n            <mesh>\n                <planeBufferGeometry args={[0.1, 0.2]} />\n                <meshBasicMaterial transparent opacity={0.6} color='black' />\n            </mesh>\n            <mesh position={[0,-0.25,0]}>\n                <planeBufferGeometry args={[0.3, 0.08]} />\n                <meshBasicMaterial transparent opacity={0.6} color='black' />\n            </mesh>\n        </group>\n    )\n}\n\nconst ResumePaper = ({}) => {\n    const paperRef = useRef()\n    const texture = useLoader(TextureLoader, process.env.PUBLIC_URL + '/resume.png')\n    useFrame(() => {\n        const paper = paperRef.current\n        paper.rotation.y += 0.01\n    })\n    return (\n        <group ref={paperRef} scale={new Array(3).fill(1.3)}>\n            <group position={[0, 0, -0.1]} rotation={[0, Math.PI, 0]}>\n                <mesh castShadow >\n                    <planeBufferGeometry args={[0.7272, 1]} />\n                    <meshBasicMaterial map={texture} />\n                </mesh>\n                <Arrow />\n            </group>\n            <group >\n                <mesh receiveShadow castShadow>\n                    <planeBufferGeometry args={[0.7272, 1]} />\n                    <meshBasicMaterial map={texture} />\n                </mesh>\n                <Arrow />\n            </group>\n        </group>\n    )\n}\n\nexport default ResumePaper","/Users/hayden/Desktop/projects/portfolio/src/components/Atom.jsx",["117"],"import { useFrame } from 'react-three-fiber'\nimport { useRef } from 'react'\n\nconst Sphere = () => (\n    <mesh receiveShadow castShadow>\n        <sphereBufferGeometry args={[0.6, 100, 100]} />\n        <meshPhysicalMaterial />\n    </mesh>\n)\n\nconst Atom = ({}) => {\n    const ref1 = useRef()\n    const ref2 = useRef()\n    const ref3 = useRef()\n    const ref4 = useRef()\n    const ref5 = useRef()\n    useFrame(({clock}) => {\n        // ref1.current.rotation.y += 0.1\n        // ref1.current.rotation.x += 0.01\n        ref2.current.position.x = 1.5*Math.sin(2*clock.getElapsedTime())\n        ref2.current.position.y = 1.5*Math.cos(2*clock.getElapsedTime())\n        ref2.current.position.z = 1.5*Math.sin(2*clock.getElapsedTime())\n\n        ref3.current.position.x = 1.2*Math.cos(2*clock.getElapsedTime() + 1)\n        ref3.current.position.y = 1.2*Math.sin(2*clock.getElapsedTime() + 2)\n        ref3.current.position.z = 1.2*Math.sin(2*clock.getElapsedTime() + 3)\n        \n        ref4.current.position.x = 1.1*Math.cos(2*clock.getElapsedTime() + 4)\n        ref4.current.position.y = 1.1*Math.sin(2*clock.getElapsedTime() + 5)\n        ref4.current.position.z = 1.1*Math.sin(2*clock.getElapsedTime() + 6)\n\n        ref5.current.position.x = 1.3*Math.cos(2*clock.getElapsedTime() + 1)\n        ref5.current.position.y = 1.3*Math.sin(2*clock.getElapsedTime() + 1)\n        ref5.current.position.z = 1.3*Math.sin(2*clock.getElapsedTime() + 5)\n    })\n    return (\n        <group ref={ref1}>\n            <Sphere/>\n            <group ref={ref2} position={[1,0,1]} scale={new Array(3).fill(0.5)}>\n                <Sphere />\n            </group>\n            <group ref={ref3} position={[0, 0, 1]} scale={new Array(3).fill(0.5)}>\n                <Sphere />\n            </group>\n            <group ref={ref4} position={[1,1,-1]} scale={new Array(3).fill(0.5)}>\n                <Sphere />\n            </group>\n            <group ref={ref5} position={[1, 1, -1]} scale={new Array(3).fill(0.5)}>\n                <Sphere />\n            </group>\n        </group>\n    )\n}\n\nexport default Atom",{"ruleId":"118","severity":1,"message":"119","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"122","line":19,"column":12,"nodeType":"120","messageId":"121","endLine":19,"endColumn":19},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":10,"nodeType":"120","messageId":"121","endLine":1,"endColumn":14},{"ruleId":"118","severity":1,"message":"127","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":24,"column":7,"nodeType":"130","endLine":24,"endColumn":9,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":28,"column":8,"nodeType":"130","endLine":28,"endColumn":10,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":16,"column":28,"nodeType":"136","messageId":"137","endLine":16,"endColumn":30},{"ruleId":"134","severity":1,"message":"135","line":16,"column":46,"nodeType":"136","messageId":"137","endLine":16,"endColumn":48},{"ruleId":"134","severity":1,"message":"138","line":16,"column":46,"nodeType":"136","messageId":"137","endLine":16,"endColumn":48},{"ruleId":"134","severity":1,"message":"138","line":17,"column":29,"nodeType":"136","messageId":"137","endLine":17,"endColumn":31},{"ruleId":"139","severity":1,"message":"140","line":9,"column":16,"nodeType":"141","messageId":"142","endLine":9,"endColumn":19},{"ruleId":"118","severity":1,"message":"143","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":14},{"ruleId":"118","severity":1,"message":"144","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":13},{"ruleId":"118","severity":1,"message":"145","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":12},{"ruleId":"139","severity":1,"message":"140","line":10,"column":19,"nodeType":"141","messageId":"142","endLine":10,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":25,"column":106,"nodeType":"148","endLine":25,"endColumn":121},{"ruleId":"139","severity":1,"message":"140","line":7,"column":17,"nodeType":"141","messageId":"142","endLine":7,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":26,"column":21,"nodeType":"151","endLine":35,"endColumn":22},{"ruleId":"139","severity":1,"message":"140","line":5,"column":18,"nodeType":"141","messageId":"142","endLine":5,"endColumn":20},{"ruleId":"139","severity":1,"message":"140","line":5,"column":16,"nodeType":"141","messageId":"142","endLine":5,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":29,"column":22,"nodeType":"141","messageId":"142","endLine":29,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":11,"column":15,"nodeType":"141","messageId":"142","endLine":11,"endColumn":17},"no-unused-vars","'Flex' is defined but never used.","Identifier","unusedVar","'vpWidth' is assigned a value but never used.","no-native-reassign",["152"],"no-negated-in-lhs",["153"],"'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'vec'. Either include it or remove the dependency array.","ArrayExpression",["154"],"React Hook useMemo has a missing dependency: 'thickness'. Either include it or remove the dependency array.",["155"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Html' is defined but never used.","'Model' is defined but never used.","'Text' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [vec]",{"range":"160","text":"161"},"Update the dependencies array to be: [thickness]",{"range":"162","text":"163"},[638,640],"[vec]",[726,728],"[thickness]"]