[{"/Users/hayden/Desktop/projects/portfolio/src/App.js":"1","/Users/hayden/Desktop/projects/portfolio/src/components/Header.jsx":"2","/Users/hayden/Desktop/projects/portfolio/src/components/Layout.jsx":"3","/Users/hayden/Desktop/projects/portfolio/src/components/Text.jsx":"4","/Users/hayden/Desktop/projects/portfolio/src/components/Bulb.jsx":"5","/Users/hayden/Desktop/projects/portfolio/src/state.js":"6","/Users/hayden/Desktop/projects/portfolio/src/components/Model.jsx":"7","/Users/hayden/Desktop/projects/portfolio/src/reportWebVitals.js":"8","/Users/hayden/Desktop/projects/portfolio/src/index.js":"9","/Users/hayden/Desktop/projects/portfolio/src/setupTests.js":"10","/Users/hayden/Desktop/projects/portfolio/src/components/Menu.jsx":"11","/Users/hayden/Desktop/projects/portfolio/src/components/Scroll.jsx":"12","/Users/hayden/Desktop/projects/portfolio/src/components/About.jsx":"13","/Users/hayden/Desktop/projects/portfolio/src/components/MenuItem.jsx":"14","/Users/hayden/Desktop/projects/portfolio/src/components/Projects.jsx":"15","/Users/hayden/Desktop/projects/portfolio/src/components/ProjectItem.jsx":"16","/Users/hayden/Desktop/projects/portfolio/src/components/Resume.jsx":"17","/Users/hayden/Desktop/projects/portfolio/src/components/Effects.jsx":"18","/Users/hayden/Desktop/projects/portfolio/src/components/ResumePaper.jsx":"19","/Users/hayden/Desktop/projects/portfolio/src/components/Atom.jsx":"20"},{"size":936,"mtime":1607975653962,"results":"21","hashOfConfig":"22"},{"size":2853,"mtime":1607923206774,"results":"23","hashOfConfig":"22"},{"size":1300,"mtime":1607896762160,"results":"24","hashOfConfig":"22"},{"size":1444,"mtime":1607451577954,"results":"25","hashOfConfig":"22"},{"size":485,"mtime":1607228827648,"results":"26","hashOfConfig":"22"},{"size":98,"mtime":1607880773988,"results":"27","hashOfConfig":"22"},{"size":811,"mtime":1607237014552,"results":"28","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"22"},{"size":500,"mtime":499162500000,"results":"30","hashOfConfig":"22"},{"size":241,"mtime":499162500000,"results":"31","hashOfConfig":"32"},{"size":2059,"mtime":1607902754797,"results":"33","hashOfConfig":"22"},{"size":1274,"mtime":1607918964818,"results":"34","hashOfConfig":"22"},{"size":3376,"mtime":1607977603297,"results":"35","hashOfConfig":"22"},{"size":3303,"mtime":1607891941574,"results":"36","hashOfConfig":"22"},{"size":5404,"mtime":1607977634848,"results":"37","hashOfConfig":"22"},{"size":1365,"mtime":1607978349622,"results":"38","hashOfConfig":"22"},{"size":1268,"mtime":1607901960236,"results":"39","hashOfConfig":"22"},{"size":488,"mtime":1607574761981,"results":"40","hashOfConfig":"32"},{"size":2067,"mtime":1607619853667,"results":"41","hashOfConfig":"22"},{"size":1942,"mtime":1607921365780,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"mp3ccl",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fs2drw",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"45"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"45"},"/Users/hayden/Desktop/projects/portfolio/src/App.js",[],["95","96"],"/Users/hayden/Desktop/projects/portfolio/src/components/Header.jsx",["97","98"],"import state from '../state'\nimport { Html } from '@react-three/drei'\nimport { Flex } from '@react-three/flex';\nimport { useThree, useFrame } from 'react-three-fiber'\nimport { useAspect } from '@react-three/drei'\nimport { useRef } from 'react'\n\nconst Header = props => {\n    const menuRef = useRef()\n    const handleClick = e => {\n        state.top = 0;\n    }\n    useFrame(() => {\n        const menu = menuRef.current\n        if (menu && state.top === 0) menu.style.display = 'none'\n        if (menu && state.top !== 0) menu.style.display = 'block'\n    })\n    const { size } = useThree();\n    const [vpWidth, vpHeight] = useAspect(\"cover\", size.width, size.height)\n    return (\n        <Html center position={[0,vpHeight/2-4,0]}>\n            <header\n                style={{\n                    zIndex: 999,\n                    width: '100vw',\n                    margin: 'auto',\n                    padding: 10,\n                    paddingTop: 20,\n                    paddingBottom: 20,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    minWidth: '250px',\n                }}\n                >\n                <nav \n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'space-between',\n                        width: '80%',\n                        maxWidth: '600px',\n                    }}\n                    >\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            background: 'rgb(255,255,255,0.5)',\n                            padding: 10,\n\n                        }}\n                    >\n                        <div style={{\n                            fontWeight: 'bold',\n                            fontSize: '20px',\n                        }}>\n                            Hayden Linder\n                        </div>\n                        <div>Web Developer</div>\n                    </div>\n                    <div\n                        ref={menuRef}\n                        style={{\n                            padding: '10px',\n                            border: '1px solid black',\n                            borderRadius: 10,\n                            cursor: 'pointer',\n                            right: '20px',\n                            background: 'white',\n                            height: 'fit-content'\n                        }}\n                        onClick={handleClick}\n                    >\n                        Menu\n                    </div>\n                </nav>\n            </header>\n        </Html>\n    )\n}\n\nexport default Header","/Users/hayden/Desktop/projects/portfolio/src/components/Layout.jsx",["99","100"],"import { Flex, Box } from '@react-three/flex'\nimport { useRef, useEffect } from 'react'\nimport { useFrame, useThree } from 'react-three-fiber'\nimport { useAspect } from '@react-three/drei'\nimport state from '../state'\nimport * as THREE from 'three'\nimport Menu from './Menu'\nimport About from './About'\nimport Projects from './Projects'\nimport Resume from './Resume'\n\nconst Layout = () => {\n    const groupRef = useRef()\n    const vec = new THREE.Vector3()\n    const { size } = useThree();\n    const [vpWidth, vpHeight] = useAspect(\"cover\", size.width, size.height)\n    useEffect(() => {\n        window.scrollTo(0, 1)\n    })\n    useEffect(() => {\n        groupRef.current.position.lerp(\n            vec.set(0,0,20),\n            1\n        )   \n    },[])\n    useFrame(three => {\n        state.vpHeight = vpHeight\n        window.state = three\n        groupRef.current.position.lerp(\n            vec.set(0, state.top,0),\n            0.1\n        )\n    })\n\n    return (\n        <group ref={groupRef}>\n            <Flex \n            align='center'\n            width={vpWidth} height={vpHeight} position={[-vpWidth/2,vpHeight/2,0]}>\n                <Menu />\n                <About />\n                <Projects />\n                <Resume />\n            </Flex>\n        </group>\n    )\n}\n\nexport default Layout;","/Users/hayden/Desktop/projects/portfolio/src/components/Text.jsx",["101"],"import * as THREE from \"three\"\nimport React, { useMemo } from \"react\"\nimport { useUpdate } from \"react-three-fiber\"\nimport * as data from 'three/examples/fonts/helvetiker_bold.typeface.json'\n\nconst Text = ({\n    children,\n    vAlign = \"center\",\n    hAlign = \"center\",\n    size = 1,\n    thickness = 2,\n    color = \"#000000\",\n    ...props\n}) => {\n    const config = useMemo(() => {\n        const font = new THREE.Font(data.default)\n        return({\n            font,\n            size: 16,\n            height: thickness,\n            curveSegments: 64,\n            // bevelEnabled: true,\n            bevelThickness: 3,\n            // bevelSize: 1,\n            // bevelOffset: 0,\n            // bevelSegments: 8,\n        })\n    }, [])\n    const mesh = useUpdate(\n        (self) => {\n            const size = new THREE.Vector3()\n            self.geometry.computeBoundingBox()\n            self.geometry.boundingBox.getSize(size)\n            self.position.x = hAlign === \"center\" ? -size.x / 2 : hAlign === \"right\" ? 0 : -size.x\n            self.position.y = vAlign === \"center\" ? -size.y / 2 : vAlign === \"top\" ? 0 : -size.y\n        },\n        [children],\n    )\n    return (\n        <group {...props} scale={[0.1 * size, 0.1 * size, 0.1]}>\n            <mesh ref={mesh} >\n                <textGeometry args={[children, config]} />\n                <meshPhysicalMaterial color={color} />\n            </mesh>\n        </group>\n    )\n}\n\nexport default Text;","/Users/hayden/Desktop/projects/portfolio/src/components/Bulb.jsx",[],"/Users/hayden/Desktop/projects/portfolio/src/state.js",[],"/Users/hayden/Desktop/projects/portfolio/src/components/Model.jsx",[],"/Users/hayden/Desktop/projects/portfolio/src/reportWebVitals.js",[],"/Users/hayden/Desktop/projects/portfolio/src/index.js",[],"/Users/hayden/Desktop/projects/portfolio/src/setupTests.js",[],"/Users/hayden/Desktop/projects/portfolio/src/components/Menu.jsx",["102","103"],"import { Flex, Box } from '@react-three/flex'\nimport Atom from './Atom'\nimport MenuItem from './MenuItem'\nimport ResumePaper from './ResumePaper'\nimport { useAspect } from '@react-three/drei'\nimport { useThree } from 'react-three-fiber'\n\nconst Menu = () => {\n    const { size } = useThree();\n    const [vpWidth, vpHeight] = useAspect(\"cover\", size.width, size.height)\n    return(\n        <Box \n            width='100%'\n            height='100%'\n            align='center'\n            justify='center'\n        >\n            <Box\n                pr={7}\n                pl={7}\n                width='100%'\n                height='auto'\n                dir='row'\n                wrap='wrap'\n                align='center'\n                justify='center'\n            >\n                <MenuItem \n                    spin={true}\n                    text='About'\n                    scrollTo={vpHeight}\n                    modelProps={{\n                        path:'/lowpoly_earth/scene.gltf',\n                        scale: new Array(3).fill(0.02) \n                    }}\n                />\n                <MenuItem \n                    text='Projects'\n                    scrollTo={vpHeight*2}\n                    modelProps={{\n                        path:'/lowpoly_earth/scene.gltf',\n                        scale: new Array(3).fill(0.02) \n                    }}\n                >\n                    <group scale={new Array(3).fill(2)}>\n                        <Atom />\n                    </group>\n                </MenuItem>\n                <MenuItem \n                    text='Resume'\n                    scrollTo={vpHeight * 3}\n                    modelProps={{\n                        path:'/lowpoly_earth/scene.gltf',\n                        scale: new Array(3).fill(0.02) \n                    }}\n                >\n                    <group scale={new Array(3).fill(4)} position={[0,0.5,0]}>\n                        <ResumePaper />\n                    </group>\n                </MenuItem>\n            </Box>\n        </Box>\n    )\n}\n\nexport default Menu","/Users/hayden/Desktop/projects/portfolio/src/components/Scroll.jsx",[],"/Users/hayden/Desktop/projects/portfolio/src/components/About.jsx",["104","105"],"import { useRef } from 'react'\nimport Model from './Model'\nimport { useFrame, useThree } from 'react-three-fiber'\nimport { Html, useAspect } from '@react-three/drei'\nimport state from '../state'\nimport Text from './Text'\nimport * as THREE from 'three'\nimport { Box } from '@react-three/flex'\n\nconst About = ({ }) => {\n    const { size } = useThree();\n    const [vpWidth, vpHeight] = useAspect(\"cover\", size.width, size.height)\n    const modelRef = useRef()\n    const vec = new THREE.Vector3()\n    useFrame(() => {\n        if (modelRef.current) {\n            modelRef.current.rotation.setFromVector3(\n                modelRef.current.rotation.toVector3()\n                .lerp(vec.set(0.1,6.28*state.top/vpHeight + 4.4,0),0.1)\n            )\n        }\n    })\n\n    const handleClick = e => {\n        state.top = vpHeight*2\n    }\n\n    return (\n        <Box \n            justify='center'\n            align='center'\n            height='100%'\n        >\n            <Box \n                centerAnchor\n                height='50%'\n            >\n                <Html center zIndexRange={[0,0]}>\n                    <div style={{ display: 'flex', textAlign: 'center', width: '80vw', flexDirection: 'column', alignItems: 'center' }}>\n                        <div>\n                            I love JavaScript, cooking, skateboarding, and music.\n                        </div>\n                        <br/>\n                        <div>\n                            My background in 3D math gives me an affinity for computational geometry.\n                        </div>\n                        <br/>\n                        <div \n                            onClick={handleClick}\n                            style={{padding: 10, paddingRight: 30, paddingLeft: 30, border: '1px solid black', fontWeight: 'bold', borderRadius: 10, background: 'rgb(255,255,255, 0.4)', width: 'fit-content', cursor: 'pointer'}}\n                        >\n                            See my projects\n                        </div>\n                    </div>\n                </Html>\n            </Box>\n            <Box \n                centerAnchor\n                height='30%'    \n            >\n                <group \n                    ref={modelRef} \n                    position={[0, 0, 0]}\n                    rotation={[0.1,4.4,0]}\n                    scale={new Array(3).fill(5)}\n                >\n                    <group position={[3, 2, -1]} rotation={[0, 1.9, 0]}>\n                        <mesh>\n                            <planeBufferGeometry args={[3.5,0.6]}/>\n                            <meshBasicMaterial color='black' opacity={0.3} transparent/>\n                        </mesh>\n                        <Text color='white' size={0.2}  thickness={0.2}>\n                            San Francisco\n                        </Text>\n                    </group>\n                    <Model\n                        path='/lowpoly_earth/scene.gltf'\n                        scale={new Array(3).fill(0.03)}\n                    />\n                    <group rotation={[-0.5,1,-1.5]} position={[2.5,1.2,-0.6]}>\n                        <Model\n                            path='/push_pin/scene.gltf'\n                            scale={new Array(3).fill(0.001)}\n                        />\n                    </group>\n                </group>\n            </Box>\n        </Box>\n    )\n}\n\nexport default About","/Users/hayden/Desktop/projects/portfolio/src/components/MenuItem.jsx",["106"],"import { Box } from '@react-three/flex'\nimport { useFrame } from 'react-three-fiber'\nimport { useRef } from 'react'\nimport { Html, Plane } from '@react-three/drei'\nimport Text from './Text'\nimport * as THREE from 'three'\nimport Model from './Model'\nimport state from '../state'\n\nconst MenuItem = ({ \n    children,\n    spin = false,\n    text, \n    scrollTo = 80,\n    modelProps = {\n        path: '',\n        scale: [1,1,1]\n    } \n}) => {\n    const sphereRef = useRef()\n    const boxRef = useRef()\n    const modelRef = useRef()\n\n    useFrame(() => {\n        const model = modelRef.current\n        if (spin) model.rotation.y += 0.01\n    })\n    \n    const handlePointerEnter = e => {\n        sphereRef.current.isHovered = true\n        boxRef.current.children.forEach(child => { \n            if (child.isMesh) child.material.opacity = 1\n        })\n    }\n    const handlePointerLeave = e => {\n        sphereRef.current.isHovered = false\n        sphereRef.current.isPointerDown = false\n        boxRef.current.children.forEach(child => {\n            if (child.isMesh) child.material.opacity = 0.7\n        })\n    }\n    const handlePointerDown = e => {\n        sphereRef.current.isPointerDown = true\n    }\n    const handlePointerUp = e => {\n        if (sphereRef.current.isPointerDown) state.top = scrollTo\n        sphereRef.current.isPointerDown = false\n    }\n\n    const listeners = {\n        onPointerEnter: handlePointerEnter, \n        onPointerLeave: handlePointerLeave,\n        onPointerDown: handlePointerDown, \n        onPointerUp: handlePointerUp,\n    }\n\n    return (\n        <Box \n            centerAnchor \n        >\n            <group \n                ref={sphereRef}\n            >\n                <group ref={boxRef} {...listeners}>\n                    <Plane args={[12,12]}  receiveShadow>\n                        <meshPhysicalMaterial transparent opacity={0.7} />\n                    </Plane> \n                    <Plane args={[12,12]} rotation={[Math.PI/2,0,0]} position={[0,6,6]} receiveShadow>\n                        <meshPhysicalMaterial transparent opacity={0.7} />\n                    </Plane> \n                    <Plane args={[12,12]} rotation={[Math.PI/2,0,0]} position={[0,-6,6]} receiveShadow>\n                        <meshPhysicalMaterial transparent opacity={0.7} side={THREE.BackSide}/>\n                    </Plane> \n                    <Plane args={[12,12]} rotation={[0,Math.PI/2,0]} position={[-6,0,6]} receiveShadow>\n                        <meshPhysicalMaterial transparent opacity={0.7} />\n                    </Plane> \n                    <Plane args={[12,12]} rotation={[0,Math.PI/2,0]} position={[6,0,6]} receiveShadow>\n                        <meshPhysicalMaterial transparent opacity={0.7} side={THREE.BackSide}/>\n                    </Plane> \n                </group>\n                <group \n                    position={[0,0,6]}\n                >\n                    {children ? \n                        children : \n                        <group ref={modelRef}>\n                            <Model {...modelProps} />\n                        </group>\n                    }\n                    <Text position={[0,-3,0]}>\n                        {text}\n                    </Text>\n                </group>\n            </group>\n        </Box>\n    )\n}\n\nexport default MenuItem","/Users/hayden/Desktop/projects/portfolio/src/components/Projects.jsx",["107","108"],"import { useRef } from 'react'\nimport Model from './Model'\nimport { useFrame } from 'react-three-fiber'\nimport { Html } from '@react-three/drei'\nimport state from '../state'\nimport Text from './Text'\nimport * as THREE from 'three'\nimport ProjectItem from './ProjectItem'\nimport { Box } from '@react-three/flex'\nimport Atom from './Atom'\n\nconst Projects = ({ }) => {\n    const panRef = useRef()\n    const vec1 = new THREE.Vector3()\n    const vec2 = new THREE.Vector3()\n    useFrame(() => {\n        vec1.lerp(vec2.set(0,state.pan,0), 0.1)\n        panRef.current.rotation.setFromVector3(vec1)\n    })\n\n    const handleClick = e => {\n        state.top = state.vpHeight*3\n    }\n\n    const handlePan = num => {\n        state.pan += num*Math.PI/2\n    }\n\n    return (\n        <Box \n            align='center'\n            justify='center'\n            height='100%'\n        >\n            <Box\n                height='20%'\n                centerAnchor\n            >\n                <Html center position={[0, 20, 0]} zIndexRange={[0, 10]}>\n                    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', textAlign: 'center' }}>\n                        <div>Here are some of my projects.</div>\n                        <br/>\n                        <div>Click on a model to view the project.</div>\n                        <br/>\n                        <div\n                            onClick={handleClick}\n                            style={{ padding: 10, paddingRight: 30, paddingLeft: 30, border: '1px solid black', fontWeight: 'bold', borderRadius: 10, background: 'rgb(255,255,255, 0.4)', minWidth: 300, cursor: 'pointer' }}\n                        >\n                            See my resume\n                        </div>\n                    </div>\n                </Html>\n            </Box>\n            <Box\n                height='auto'\n                centerAnchor\n            >\n                <Html center position={[0, 5, 40]} zIndexRange={[999, 0]} scaleFactor={15}>\n                    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', textAlign: 'center' }}>\n                        <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: 70, width: 200 }}>\n                            <div onClick={e => handlePan(1)} style={{ cursor: 'pointer', position: 'absolute', top: 0, left: -80 }}>⇦</div>\n                            <div onClick={e => handlePan(-1)} style={{ cursor: 'pointer', position: 'absolute', top: 0, right: -80 }}>⇨</div>\n                        </div>\n                    </div>\n                </Html>\n                <group ref={panRef} scale={new Array(3).fill(2)}>\n                    <mesh position={[0,-0.4,0]} receiveShadow>\n                        <cylinderBufferGeometry args={[20,20,0.1,100]}/>\n                        <meshPhysicalMaterial />\n                    </mesh>\n                    <group position={[0,1,17]} >\n                        <ProjectItem\n                            title='Particles'\n                            description='An orbital physics simulator.'\n                            link='https://haydenlinder.github.io/particles'\n                        />\n                        <group scale={[0.5,0.5,0.5]} position={[0,0.5,0]}>\n                            <Atom />\n                        </group>\n                    </group>\n                    <group position={[17, 1, 0]} >\n                        <ProjectItem\n                            title='Abocabo'\n                            description='Find cheap produce near you.'\n                            link='https://www.abocabo.com'\n                        />\n                        <Model \n                            path='/avocado/scene.gltf' \n                            scale={new Array(3).fill(0.05)} rotation={[0,Math.PI/3,0]}\n                            position={[0,0,0.4]}\n                        />\n                    </group>\n                    <group position={[-17, 1, 0]} >\n                        <ProjectItem\n                            title='Tickets'\n                            description='A project management app featuring complex queries.'\n                            link='https://ticats.herokuapp.com/'\n                        />\n                        <Model \n                            path='/checkmark/scene.gltf'\n                            scale={new Array(3).fill(0.3)}\n                            rotation={[0,-Math.PI/2,0]}\n                            position={[0,0,-0.5]}\n                        />\n                    </group>\n                    <group position={[0, 1, -17]} >\n                        <ProjectItem\n                            title='Tesla Paint Picker'\n                            description='The end result from an in-depth tutorial on Three.js and react-three-fiber.'\n                            link='https://haydenlinder.github.io/react-three-fiber/'\n                        />\n                        <group position={[0,0.5,0]}>\n                            <Model \n                                path='/tesla_model_3/scene.gltf'\n                                scale={new Array(3).fill(0.007)}\n                                rotation={[0,3*Math.PI/4,0]}\n                            />\n                        </group>\n                    </group>\n                </group>\n            </Box>\n        </Box>\n    )\n}\n\nexport default Projects","/Users/hayden/Desktop/projects/portfolio/src/components/ProjectItem.jsx",["109","110"],"import { useFrame } from 'react-three-fiber'\nimport { useRef } from 'react'\nimport { Html } from '@react-three/drei'\nimport state from '../state'\nimport * as THREE from 'three'\n\nconst ProjectItem = ({\n    title = 'title',\n    description = 'description',\n    link = '#',\n    path = '',\n}) => {\n    const vec = new THREE.Vector3()\n    const htmlRef = useRef()\n    const groupRef = useRef()\n    useFrame(() => {\n        if (groupRef.current.getWorldPosition(vec).z <= 10)\n            htmlRef.current.style.display = 'none'\n        else htmlRef.current.style.display = 'flex'\n    })\n    return (\n        <group position={[0, 0.5, 0]} ref={groupRef}>\n            <Html center scaleFactor={20} zIndexRange={[999,0]} >       \n                <div ref={htmlRef} style={{ display: 'flex', fontSize: 25, flexDirection: 'column', alignItems: 'center', margin: 10, textAlign: 'center'}}>\n                    <div style={{ background: 'rgb(255,255,255)'}}>\n                        <div style={{fontWeight: 'bold'}}>{title}</div>\n                        <div>{description}</div>\n                    </div>\n                    <br/>\n                    <a style={{height: '50vh', width: 400, overflow: 'hidden', display: 'flex'}} href={link} target='_blank'>\n                    </a>\n                </div>\n            </Html>\n        </group>\n    )\n}\n\nexport default ProjectItem","/Users/hayden/Desktop/projects/portfolio/src/components/Resume.jsx",["111"],"import ResumePaper from './ResumePaper'\nimport { Html } from '@react-three/drei'\nimport { Box } from '@react-three/flex'\n\nconst Resume = ({}) => {\n    return (\n        <Box\n            height='100%'\n            width='auto'\n            centerAnchor\n        >\n            <group scale={new Array(3).fill(15)} position={[0,-10,0]}>\n                <mesh receiveShadow castShadow rotation={[0,Math.PI/4,0]}>\n                    <boxBufferGeometry args={[1,1,1]}/>\n                    <meshPhysicalMaterial />\n                </mesh>\n                <Html center position={[0,1.6,0]} scaleFactor={150}> \n                    <a \n                        href={process.env.PUBLIC_URL + '/hayden_linder_resume.pdf'} \n                        download\n                        style={{\n                            height: '100%',\n                            width: '100%',\n                            background: 'blue'\n                        }}\n                    >\n                    <div style={{ height: 140, width: 100}}>\n                    </div>\n                    </a> \n                </Html>\n                <group position={[0,1.5,0]}>\n                    <ResumePaper />\n                </group>\n            </group>\n        </Box>\n    )\n}\n\nexport default Resume","/Users/hayden/Desktop/projects/portfolio/src/components/Effects.jsx",["112"],"/Users/hayden/Desktop/projects/portfolio/src/components/ResumePaper.jsx",["113","114"],"import { useRef } from 'react'\nimport { useFrame, useLoader } from 'react-three-fiber'\nimport { TextureLoader } from 'three'\n\nconst Arrow = ({}) => {\n    return (\n        <group position={[0, 0, 0.1]}>\n            <mesh position={[0, -0.1, 0]} scale={new Array(3).fill(0.1)} rotation={[0, 0, Math.PI]}>\n                <geometry>\n                    <face3 args={[0, 1, 2]} attachArray='faces' />\n                    <vector3 attachArray='vertices' args={[-1, 0, 0]} />\n                    <vector3 attachArray='vertices' args={[1, 0, 0]} />\n                    <vector3 attachArray='vertices' args={[0, 1, 0]} />\n                </geometry>\n                <meshBasicMaterial transparent opacity={0.6} color='black' />\n            </mesh>\n            <mesh>\n                <planeBufferGeometry args={[0.1, 0.2]} />\n                <meshBasicMaterial transparent opacity={0.6} color='black' />\n            </mesh>\n            <mesh position={[0,-0.25,0]}>\n                <planeBufferGeometry args={[0.3, 0.08]} />\n                <meshBasicMaterial transparent opacity={0.6} color='black' />\n            </mesh>\n        </group>\n    )\n}\n\nconst ResumePaper = ({}) => {\n    const paperRef = useRef()\n    const texture = useLoader(TextureLoader, process.env.PUBLIC_URL + '/resume.png')\n    useFrame(() => {\n        const paper = paperRef.current\n        paper.rotation.y += 0.01\n    })\n    return (\n        <group ref={paperRef} scale={new Array(3).fill(1.3)}>\n            <group position={[0, 0, -0.1]} rotation={[0, Math.PI, 0]}>\n                <mesh castShadow >\n                    <planeBufferGeometry args={[0.7272, 1]} />\n                    <meshBasicMaterial map={texture} />\n                </mesh>\n                <Arrow />\n            </group>\n            <group >\n                <mesh receiveShadow castShadow>\n                    <planeBufferGeometry args={[0.7272, 1]} />\n                    <meshBasicMaterial map={texture} />\n                </mesh>\n                <Arrow />\n            </group>\n        </group>\n    )\n}\n\nexport default ResumePaper","/Users/hayden/Desktop/projects/portfolio/src/components/Atom.jsx",["115"],"import { useFrame } from 'react-three-fiber'\nimport { useRef } from 'react'\n\nconst Sphere = () => (\n    <mesh receiveShadow castShadow>\n        <sphereBufferGeometry args={[1, 100, 100]} />\n        <meshPhysicalMaterial />\n    </mesh>\n)\n\nconst Atom = ({}) => {\n    const ref2 = useRef()\n    const ref3 = useRef()\n    const ref4 = useRef()\n    const ref5 = useRef()\n    useFrame(({clock}) => {\n        ref2.current.position.x = 2.5*Math.sin(2*clock.getElapsedTime())\n        ref2.current.position.y = 2.5*Math.cos(2*clock.getElapsedTime())\n        ref2.current.position.z = 2.5*Math.sin(2*clock.getElapsedTime())\n\n        ref3.current.position.x = 2.2*Math.cos(2*clock.getElapsedTime() + 1)\n        ref3.current.position.y = 2.2*Math.sin(2*clock.getElapsedTime() + 2)\n        ref3.current.position.z = 2.2*Math.sin(2*clock.getElapsedTime() + 3)\n        \n        ref4.current.position.x = 2.1*Math.cos(2*clock.getElapsedTime() + 4)\n        ref4.current.position.y = 2.1*Math.sin(2*clock.getElapsedTime() + 5)\n        ref4.current.position.z = 2.1*Math.sin(2*clock.getElapsedTime() + 6)\n\n        ref5.current.position.x = 2.3*Math.cos(2*clock.getElapsedTime() + 1)\n        ref5.current.position.y = 2.3*Math.sin(2*clock.getElapsedTime() + 1)\n        ref5.current.position.z = 2.3*Math.sin(2*clock.getElapsedTime() + 5)\n    })\n    return (\n        <group >\n            <Sphere/>\n            <group ref={ref2} position={[1,0,1]} scale={new Array(3).fill(0.5)}>\n                <Sphere />\n            </group>\n            <group ref={ref3} position={[0, 0, 1]} scale={new Array(3).fill(0.5)}>\n                <Sphere />\n            </group>\n            <group ref={ref4} position={[1,1,-1]} scale={new Array(3).fill(0.5)}>\n                <Sphere />\n            </group>\n            <group ref={ref5} position={[1, 1, -1]} scale={new Array(3).fill(0.5)}>\n                <Sphere />\n            </group>\n        </group>\n    )\n}\n\nexport default Atom",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":14},{"ruleId":"120","severity":1,"message":"124","line":19,"column":12,"nodeType":"122","messageId":"123","endLine":19,"endColumn":19},{"ruleId":"120","severity":1,"message":"125","line":1,"column":16,"nodeType":"122","messageId":"123","endLine":1,"endColumn":19},{"ruleId":"126","severity":1,"message":"127","line":25,"column":7,"nodeType":"128","endLine":25,"endColumn":9,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"130","line":28,"column":8,"nodeType":"128","endLine":28,"endColumn":10,"suggestions":"131"},{"ruleId":"120","severity":1,"message":"121","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":14},{"ruleId":"120","severity":1,"message":"124","line":10,"column":12,"nodeType":"122","messageId":"123","endLine":10,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":10,"column":16,"nodeType":"134","messageId":"135","endLine":10,"endColumn":19},{"ruleId":"120","severity":1,"message":"124","line":12,"column":12,"nodeType":"122","messageId":"123","endLine":12,"endColumn":19},{"ruleId":"120","severity":1,"message":"136","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":14},{"ruleId":"120","severity":1,"message":"137","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":12},{"ruleId":"132","severity":1,"message":"133","line":12,"column":19,"nodeType":"134","messageId":"135","endLine":12,"endColumn":22},{"ruleId":"120","severity":1,"message":"138","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":30,"column":110,"nodeType":"141","endLine":30,"endColumn":125},{"ruleId":"132","severity":1,"message":"133","line":5,"column":17,"nodeType":"134","messageId":"135","endLine":5,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":5,"column":18,"nodeType":"134","messageId":"135","endLine":5,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":5,"column":16,"nodeType":"134","messageId":"135","endLine":5,"endColumn":18},{"ruleId":"132","severity":1,"message":"133","line":29,"column":22,"nodeType":"134","messageId":"135","endLine":29,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":11,"column":15,"nodeType":"134","messageId":"135","endLine":11,"endColumn":17},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'Flex' is defined but never used.","Identifier","unusedVar","'vpWidth' is assigned a value but never used.","'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'vec'. Either include it or remove the dependency array.","ArrayExpression",["144"],"React Hook useMemo has a missing dependency: 'thickness'. Either include it or remove the dependency array.",["145"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Html' is defined but never used.","'Text' is defined but never used.","'state' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [vec]",{"range":"150","text":"151"},"Update the dependencies array to be: [thickness]",{"range":"152","text":"153"},[749,751],"[vec]",[726,728],"[thickness]"]